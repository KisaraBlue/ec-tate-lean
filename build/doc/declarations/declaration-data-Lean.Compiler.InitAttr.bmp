{"name":"Lean.Compiler.InitAttr","instances":[],"imports":["Init","Lean.Elab.InfoTree.Main"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L122-L132","name":"Lean.declareBuiltin","docLink":"./Lean/Compiler/InitAttr.html#Lean.declareBuiltin","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L119-L120","name":"Lean.setBuiltinInitAttr","docLink":"./Lean/Compiler/InitAttr.html#Lean.setBuiltinInitAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L116-L117","name":"Lean.hasInitAttr","docLink":"./Lean/Compiler/InitAttr.html#Lean.hasInitAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L113-L114","name":"Lean.isIOUnitInitFn","docLink":"./Lean/Compiler/InitAttr.html#Lean.isIOUnitInitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L110-L111","name":"Lean.isIOUnitBuiltinInitFn","docLink":"./Lean/Compiler/InitAttr.html#Lean.isIOUnitBuiltinInitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L106-L107","name":"Lean.isIOUnitRegularInitFn","docLink":"./Lean/Compiler/InitAttr.html#Lean.isIOUnitRegularInitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L100-L103","name":"Lean.isIOUnitInitFnCore","docLink":"./Lean/Compiler/InitAttr.html#Lean.isIOUnitInitFnCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L97-L98","name":"Lean.getInitFnNameFor?","docLink":"./Lean/Compiler/InitAttr.html#Lean.getInitFnNameFor?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L93-L94","name":"Lean.getRegularInitFnNameFor?","docLink":"./Lean/Compiler/InitAttr.html#Lean.getRegularInitFnNameFor?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L89-L90","name":"Lean.getBuiltinInitFnNameFor?","docLink":"./Lean/Compiler/InitAttr.html#Lean.getBuiltinInitFnNameFor?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L82-L86","name":"Lean.getInitFnNameForCore?","docLink":"./Lean/Compiler/InitAttr.html#Lean.getInitFnNameForCore?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L80-L80","name":"Lean.builtinInitAttr","docLink":"./Lean/Compiler/InitAttr.html#Lean.builtinInitAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L79-L79","name":"Lean.regularInitAttr","docLink":"./Lean/Compiler/InitAttr.html#Lean.regularInitAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L76-L77","name":"Lean.registerInitAttr","docLink":"./Lean/Compiler/InitAttr.html#Lean.registerInitAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L34-L70","name":"Lean.registerInitAttrUnsafe","docLink":"./Lean/Compiler/InitAttr.html#Lean.registerInitAttrUnsafe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L32-L32","name":"Lean.runInit","docLink":"./Lean/Compiler/InitAttr.html#Lean.runInit","doc":"Run the initializer for `decl` and store its value for global access. Should only be used while importing. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/InitAttr.lean#L28-L28","name":"Lean.runModInit","docLink":"./Lean/Compiler/InitAttr.html#Lean.runModInit","doc":"Run the initializer of the given module (without `builtin_initialize` commands).\nReturn `false` if the initializer is not available as native code.\nInitializers do not have corresponding Lean definitions, so they cannot be interpreted in this case. "}]}