{"name":"Lean.Elab.DeclUtil","instances":[],"imports":["Init","Lean.Meta.Basic","Lean.Meta.Check"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DeclUtil.lean#L75-L82","name":"Lean.Elab.sortDeclLevelParams","docLink":"./Lean/Elab/DeclUtil.html#Lean.Elab.sortDeclLevelParams","doc":"Sort the given list of `usedParams` using the following order:\n- If it is an explicit level `allUserParams`, then use user given order.\n- Otherwise, use lexicographical.\n\nRemark: `scopeParams` are the universe params introduced using the `universe` command. `allUserParams` contains\nthe universe params introduced using the `universe` command *and* the `.{...}` notation.\n\nRemark: this function return an exception if there is an `u` not in `usedParams`, that is in `allUserParams` but not in `scopeParams`.\n\nRemark: `explicitParams` are in reverse declaration order. That is, the head is the last declared parameter. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DeclUtil.lean#L59-L62","name":"Lean.Elab.isFreshInstanceName","docLink":"./Lean/Elab/DeclUtil.html#Lean.Elab.isFreshInstanceName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DeclUtil.lean#L56-L57","name":"Lean.Elab.mkFreshInstanceName","docLink":"./Lean/Elab/DeclUtil.html#Lean.Elab.mkFreshInstanceName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DeclUtil.lean#L50-L54","name":"Lean.Elab.expandDeclSig","docLink":"./Lean/Elab/DeclUtil.html#Lean.Elab.expandDeclSig","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DeclUtil.lean#L40-L48","name":"Lean.Elab.expandOptDeclSig","docLink":"./Lean/Elab/DeclUtil.html#Lean.Elab.expandOptDeclSig","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DeclUtil.lean#L32-L34","name":"Lean.Meta.forallTelescopeCompatible","docLink":"./Lean/Elab/DeclUtil.html#Lean.Meta.forallTelescopeCompatible","doc":"Given two forall-expressions `type₁` and `type₂`, ensure the first `numParams` parameters are compatible, and\nthen execute `k` with the parameters and remaining types. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DeclUtil.lean#L11-L28","name":"Lean.Meta.forallTelescopeCompatibleAux","docLink":"./Lean/Elab/DeclUtil.html#Lean.Meta.forallTelescopeCompatibleAux","doc":""}]}