{"name":"Lean.Elab.DefView","instances":[{"typeNames":["Lean.Elab.DefKind"],"name":"Lean.Elab.instInhabitedDefKind","className":"Inhabited"},{"typeNames":["Lean.Elab.DefKind"],"name":"Lean.Elab.instBEqDefKind","className":"BEq"},{"typeNames":["Lean.Elab.DefView"],"name":"Lean.Elab.instInhabitedDefView","className":"Inhabited"}],"imports":["Init","Lean.Meta.ForEachExpr","Lean.Elab.Command","Lean.Elab.DeclUtil"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L150-L165","name":"Lean.Elab.Command.mkDefView","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefView","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L141-L148","name":"Lean.Elab.Command.isDefLike","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.isDefLike","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L133-L139","name":"Lean.Elab.Command.mkDefViewOfExample","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfExample","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L120-L131","name":"Lean.Elab.Command.mkDefViewOfOpaque","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfOpaque","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L103-L118","name":"Lean.Elab.Command.mkDefViewOfInstance","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfInstance","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L77-L101","name":"Lean.Elab.Command.mkInstanceName","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkInstanceName","doc":"Generate a name for an instance with the given type.\nNote that we elaborate the type twice. Once for producing the name, and another when elaborating the declaration. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L68-L72","name":"Lean.Elab.Command.mkFreshInstanceName","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkFreshInstanceName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L62-L66","name":"Lean.Elab.Command.mkDefViewOfTheorem","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L55-L60","name":"Lean.Elab.Command.mkDefViewOfDef","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfDef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L47-L53","name":"Lean.Elab.Command.mkDefViewOfAbbrev","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfAbbrev","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L41-L42","name":"Lean.Elab.DefView.isInstance","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.isInstance","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L39-L39","name":"Lean.Elab.instInhabitedDefView","docLink":"./Lean/Elab/DefView.html#Lean.Elab.instInhabitedDefView","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L30-L39","name":"Lean.Elab.DefView","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L26-L28","name":"Lean.Elab.DefKind.isExample","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isExample","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L20-L24","name":"Lean.Elab.DefKind.isDefOrAbbrevOrOpaque","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isDefOrAbbrevOrOpaque","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L16-L18","name":"Lean.Elab.DefKind.isTheorem","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L14-L14","name":"Lean.Elab.instBEqDefKind","docLink":"./Lean/Elab/DefView.html#Lean.Elab.instBEqDefKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L14-L14","name":"Lean.Elab.instInhabitedDefKind","docLink":"./Lean/Elab/DefView.html#Lean.Elab.instInhabitedDefKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/DefView.lean#L12-L14","name":"Lean.Elab.DefKind","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind","doc":""}]}