{"name":"Lean.Meta.Tactic.UnifyEq","instances":[],"imports":["Init","Lean.Meta.Tactic.Injection"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/UnifyEq.lean#L66-L86","name":"Lean.Meta.unifyEq?.injection","docLink":"./Lean/Meta/Tactic/UnifyEq.html#Lean.Meta.unifyEq?.injection","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/UnifyEq.lean#L55-L65","name":"Lean.Meta.unifyEq?.substEq","docLink":"./Lean/Meta/Tactic/UnifyEq.html#Lean.Meta.unifyEq?.substEq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/UnifyEq.lean#L37-L102","name":"Lean.Meta.unifyEq?","docLink":"./Lean/Meta/Tactic/UnifyEq.html#Lean.Meta.unifyEq?","doc":"Helper method for methods such as `Cases.unifyEqs?`.\nGiven the given goal `mvarId` containing the local hypothesis `eqFVarId`, it performs the following operations:\n\n- If `eqFVarId` is a heterogeneous equality, tries to convert it to a homogeneous one.\n- If `eqFVarId` is a homogeneous equality of the form `a = b`, it tries\n   - If `a` and `b` are definitionally equal, clear it\n   - Normalize `a` and `b` using the current reducibility setting.\n   - If `a` (`b`) is a free variable not occurring in `b` (`a`), replace it everywhere.\n   - If `a` and `b` are distinct constructors, return `none` to indicate that the goal has been closed.\n   - If `a` and `b` are the same contructor, apply `injection`, the result contains the number of new equalities introduced in the goal.\n   - It also tries to apply the given `acyclic` method to try to close the goal.\n     Remark: It is a parameter because `simp` uses `unifyEq?`, and `acyclic` depends on `simp`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/UnifyEq.lean#L18-L21","name":"Lean.Meta.UnifyEqResult","docLink":"./Lean/Meta/Tactic/UnifyEq.html#Lean.Meta.UnifyEqResult","doc":""}]}