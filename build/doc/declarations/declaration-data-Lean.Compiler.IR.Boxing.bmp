{"name":"Lean.Compiler.IR.Boxing","instances":[],"imports":["Init","Lean.Runtime","Lean.Compiler.ClosedTermCache","Lean.Compiler.ExternAttr","Lean.Compiler.IR.Basic","Lean.Compiler.IR.CompilerM","Lean.Compiler.IR.FreeVars","Lean.Compiler.IR.ElimDeadVars"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L340-L342","name":"Lean.IR.explicitBoxing","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.explicitBoxing","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L324-L336","name":"Lean.IR.ExplicitBoxing.run","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.run","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L292-L322","name":"Lean.IR.ExplicitBoxing.visitFnBody","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.visitFnBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L268-L290","name":"Lean.IR.ExplicitBoxing.visitVDeclExpr","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.visitVDeclExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L260-L266","name":"Lean.IR.ExplicitBoxing.castResultIfNeeded","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.castResultIfNeeded","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L253-L258","name":"Lean.IR.ExplicitBoxing.unboxResultIfNeeded","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.unboxResultIfNeeded","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L248-L251","name":"Lean.IR.ExplicitBoxing.boxArgsIfNeeded","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.boxArgsIfNeeded","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L243-L246","name":"Lean.IR.ExplicitBoxing.castArgsIfNeeded","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.castArgsIfNeeded","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L221-L241","name":"Lean.IR.ExplicitBoxing.castArgsIfNeededAux","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.castArgsIfNeededAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L216-L219","name":"Lean.IR.ExplicitBoxing.castArgIfNeeded","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.castArgIfNeeded","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L207-L214","name":"Lean.IR.ExplicitBoxing.castVarIfNeeded","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.castVarIfNeeded","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L177-L205","name":"Lean.IR.ExplicitBoxing.mkCast","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.mkCast","doc":"Auxiliary function used by castVarIfNeeded.\nIt is used when the expected type does not match `xType`.\nIf `xType` is scalar, then we need to \"box\" it. Otherwise, we need to \"unbox\" it. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L153-L154","name":"Lean.IR.ExplicitBoxing.withJDecl","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.withJDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L150-L151","name":"Lean.IR.ExplicitBoxing.withVDecl","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.withVDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L147-L148","name":"Lean.IR.ExplicitBoxing.withParams","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.withParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L141-L145","name":"Lean.IR.ExplicitBoxing.getDecl","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L135-L139","name":"Lean.IR.ExplicitBoxing.getJPParams","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getJPParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L129-L133","name":"Lean.IR.ExplicitBoxing.getVarType","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getVarType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L127-L127","name":"Lean.IR.ExplicitBoxing.getResultType","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getResultType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L126-L126","name":"Lean.IR.ExplicitBoxing.getLocalContext","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getLocalContext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L125-L125","name":"Lean.IR.ExplicitBoxing.getEnv","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getEnv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L119-L119","name":"Lean.IR.ExplicitBoxing.M","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.M","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L102-L117","name":"Lean.IR.ExplicitBoxing.BoxingState","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.BoxingState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L95-L100","name":"Lean.IR.ExplicitBoxing.BoxingContext","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.BoxingContext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L92-L93","name":"Lean.IR.ExplicitBoxing.eqvTypes","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.eqvTypes","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L77-L90","name":"Lean.IR.ExplicitBoxing.getScrutineeType","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getScrutineeType","doc":"Infer scrutinee type using `case` alternatives.\nThis can be done whenever `alts` does not contain an `Alt.default _` value. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L70-L73","name":"Lean.IR.ExplicitBoxing.addBoxedVersions","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.addBoxedVersions","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L67-L68","name":"Lean.IR.ExplicitBoxing.mkBoxedVersion","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.mkBoxedVersion","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L46-L65","name":"Lean.IR.ExplicitBoxing.mkBoxedVersionAux","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.mkBoxedVersionAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L41-L44","name":"Lean.IR.ExplicitBoxing.requiresBoxedVersion","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.requiresBoxedVersion","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L36-L36","name":"Lean.IR.ExplicitBoxing.N","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.N","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L33-L34","name":"Lean.IR.ExplicitBoxing.isBoxedName","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.isBoxedName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/Boxing.lean#L30-L31","name":"Lean.IR.ExplicitBoxing.mkBoxedName","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.mkBoxedName","doc":""}]}