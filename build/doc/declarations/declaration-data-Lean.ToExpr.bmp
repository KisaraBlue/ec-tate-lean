{"name":"Lean.ToExpr","instances":[{"typeNames":["Nat"],"name":"Lean.instToExprNat","className":"Lean.ToExpr"},{"typeNames":["Bool"],"name":"Lean.instToExprBool","className":"Lean.ToExpr"},{"typeNames":["Char"],"name":"Lean.instToExprChar","className":"Lean.ToExpr"},{"typeNames":["String"],"name":"Lean.instToExprString","className":"Lean.ToExpr"},{"typeNames":["Unit"],"name":"Lean.instToExprUnit","className":"Lean.ToExpr"},{"typeNames":["Lean.Name"],"name":"Lean.instToExprName","className":"Lean.ToExpr"},{"typeNames":["Option"],"name":"Lean.instToExprOption","className":"Lean.ToExpr"},{"typeNames":["List"],"name":"Lean.instToExprList","className":"Lean.ToExpr"},{"typeNames":["Array"],"name":"Lean.instToExprArray","className":"Lean.ToExpr"},{"typeNames":["Prod"],"name":"Lean.instToExprProd","className":"Lean.ToExpr"}],"imports":["Init","Lean.Expr"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/ToExpr.lean#L103-L109","name":"Lean.Expr.toCtorIfLit","docLink":"./Lean/ToExpr.html#Lean.Expr.toCtorIfLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/ToExpr.lean#L97-L101","name":"Lean.instToExprProd","docLink":"./Lean/ToExpr.html#Lean.instToExprProd","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/ToExpr.lean#L92-L95","name":"Lean.instToExprArray","docLink":"./Lean/ToExpr.html#Lean.instToExprArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/ToExpr.lean#L85-L90","name":"Lean.instToExprList","docLink":"./Lean/ToExpr.html#Lean.instToExprList","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/ToExpr.lean#L74-L79","name":"Lean.instToExprOption","docLink":"./Lean/ToExpr.html#Lean.instToExprOption","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/ToExpr.lean#L70-L72","name":"Lean.instToExprName","docLink":"./Lean/ToExpr.html#Lean.instToExprName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/ToExpr.lean#L43-L45","name":"Lean.instToExprUnit","docLink":"./Lean/ToExpr.html#Lean.instToExprUnit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/ToExpr.lean#L39-L41","name":"Lean.instToExprString","docLink":"./Lean/ToExpr.html#Lean.instToExprString","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/ToExpr.lean#L35-L37","name":"Lean.instToExprChar","docLink":"./Lean/ToExpr.html#Lean.instToExprChar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/ToExpr.lean#L31-L33","name":"Lean.instToExprBool","docLink":"./Lean/ToExpr.html#Lean.instToExprBool","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/ToExpr.lean#L27-L29","name":"Lean.instToExprNat","docLink":"./Lean/ToExpr.html#Lean.instToExprNat","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/ToExpr.lean#L19-L23","name":"Lean.ToExpr","docLink":"./Lean/ToExpr.html#Lean.ToExpr","doc":"We use the `ToExpr` type class to convert values of type `Î±` into\nexpressions that denote these values in Lean.\nExample:\n```\ntoExpr true = .const ``Bool.true []\n```\n"}]}