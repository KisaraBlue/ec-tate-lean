{"name":"Lean.Compiler.LCNF.Basic","instances":[{"typeNames":["Lean.Compiler.LCNF.Param"],"name":"Lean.Compiler.LCNF.instInhabitedParam","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Param"],"name":"Lean.Compiler.LCNF.instBEqParam","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.AltCore"],"name":"Lean.Compiler.LCNF.instInhabitedAltCore","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.LetDecl"],"name":"Lean.Compiler.LCNF.instInhabitedLetDecl","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.LetDecl"],"name":"Lean.Compiler.LCNF.instBEqLetDecl","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.FunDeclCore"],"name":"Lean.Compiler.LCNF.instInhabitedFunDeclCore","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.CasesCore"],"name":"Lean.Compiler.LCNF.instInhabitedCasesCore","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Code"],"name":"Lean.Compiler.LCNF.instInhabitedCode","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.CodeDecl"],"name":"Lean.Compiler.LCNF.instInhabitedCodeDecl","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Code"],"name":"Lean.Compiler.LCNF.instBEqCode","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.FunDecl"],"name":"Lean.Compiler.LCNF.instBEqFunDecl","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.Decl"],"name":"Lean.Compiler.LCNF.instInhabitedDecl","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Decl"],"name":"Lean.Compiler.LCNF.instBEqDecl","className":"BEq"}],"imports":["Init","Lean.Expr","Lean.Meta.Instances","Lean.Compiler.InlineAttrs","Lean.Compiler.Specialize"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L576-L577","name":"Lean.Compiler.LCNF.markRecDecls.go","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.markRecDecls.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L565-L574","name":"Lean.Compiler.LCNF.markRecDecls.visit","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.markRecDecls.visit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L557-L577","name":"Lean.Compiler.LCNF.markRecDecls","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.markRecDecls","doc":"Traverse the given block of potentially mutually recursive functions\nand mark a declaration `f` as recursive if there is an application\n`f ...` in the block.\nThis is an overapproximation, and relies on the fact that our frontend\ncomputes strongly connected components.\nSee comment at `recursive` field.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L546-L547","name":"Lean.Compiler.LCNF.collectUsedAtExpr","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.collectUsedAtExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L530-L543","name":"Lean.Compiler.LCNF.Code.collectUsed","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.collectUsed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L510-L511","name":"Lean.Compiler.LCNF.FunDeclCore.collectUsed","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.collectUsed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L499-L507","name":"Lean.Compiler.LCNF.Decl.isTemplateLike","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.isTemplateLike","doc":"Return `true` if `decl` is supposed to be inlined/specialized.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L491-L494","name":"Lean.Compiler.LCNF.hasLocalInst","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.hasLocalInst","doc":"Return `true` if the arrow type contains an instance implicit argument.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L479-L486","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instCode","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L476-L477","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instFunDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instFunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L473-L474","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instLetDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instLetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L468-L471","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instAlt","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instAlt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L465-L466","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instParams","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L462-L463","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instExpr","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L459-L486","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L456-L457","name":"Lean.Compiler.LCNF.Decl.instantiateParamsLevelParams","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateParamsLevelParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L453-L454","name":"Lean.Compiler.LCNF.Decl.instantiateTypeLevelParams","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateTypeLevelParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L447-L451","name":"Lean.Compiler.LCNF.Decl.isCasesOnParam?.go","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.isCasesOnParam?.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L444-L451","name":"Lean.Compiler.LCNF.Decl.isCasesOnParam?","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.isCasesOnParam?","doc":"Return `some i` if `decl` is of the form\n```\ndef f (a_0 ... a_i ...) :=\n  ...\n  cases a_i\n  | ...\n  | ...\n```\nThat is, `f` is a sequence of declarations followed by a `cases` on the parameter `i`.\nWe use this function to decide whether we should inline a declaration tagged with\n`[inline_if_reduce]` or not.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L425-L429","name":"Lean.Compiler.LCNF.Decl.inlineable","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.inlineable","doc":"Return `true` if the given declaration has been annotated with `[inline]`, `[inline_if_reduce]`, `[macro_inline]`, or `[always_inline]` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L421-L422","name":"Lean.Compiler.LCNF.Decl.alwaysInlineAttr","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.alwaysInlineAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L418-L419","name":"Lean.Compiler.LCNF.Decl.inlineIfReduceAttr","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.inlineIfReduceAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L415-L416","name":"Lean.Compiler.LCNF.Decl.noinlineAttr","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.noinlineAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L412-L413","name":"Lean.Compiler.LCNF.Decl.inlineAttr","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.inlineAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L409-L410","name":"Lean.Compiler.LCNF.Decl.getArity","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.getArity","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L406-L407","name":"Lean.Compiler.LCNF.Decl.size","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.size","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L404-L404","name":"Lean.Compiler.LCNF.instBEqDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L404-L404","name":"Lean.Compiler.LCNF.instInhabitedDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L341-L404","name":"Lean.Compiler.LCNF.Decl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl","doc":"Declaration being processed by the Lean to Lean compiler passes.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L330-L336","name":"Lean.Compiler.LCNF.Code.forM.go","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.forM.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L327-L336","name":"Lean.Compiler.LCNF.Code.forM","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.forM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L319-L325","name":"Lean.Compiler.LCNF.Code.sizeLe.go","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.sizeLe.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L315-L317","name":"Lean.Compiler.LCNF.Code.sizeLe.inc","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.sizeLe.inc","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L310-L325","name":"Lean.Compiler.LCNF.Code.sizeLe","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.sizeLe","doc":"Return true iff `c.size ≤ n` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L301-L307","name":"Lean.Compiler.LCNF.Code.size.go","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.size.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L298-L307","name":"Lean.Compiler.LCNF.Code.size","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.size","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L294-L296","name":"Lean.Compiler.LCNF.Code.isReturnOf","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.isReturnOf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L290-L292","name":"Lean.Compiler.LCNF.Code.isFun","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.isFun","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L286-L288","name":"Lean.Compiler.LCNF.Code.isDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.isDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L283-L284","name":"Lean.Compiler.LCNF.AltCore.mapCodeM","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.mapCodeM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L274-L281","name":"Lean.Compiler.LCNF.CasesCore.extractAlt!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore.extractAlt!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L272-L272","name":"Lean.Compiler.LCNF.FunDeclCore.updateCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.updateCore","doc":"Low-level update `FunDecl` function. It does not update the local context.\nConsider using `FunDecl.update : LetDecl → Expr → Array Param → Code → CompilerM FunDecl` if you want the local context\nto be updated.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L259-L259","name":"Lean.Compiler.LCNF.LetDecl.updateCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl.updateCore","doc":"Low-level update `LetDecl` function. It does not update the local context.\nConsider using `LetDecl.update : LetDecl → Expr → Expr → CompilerM LetDecl` if you want the local context\nto be updated.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L246-L246","name":"Lean.Compiler.LCNF.Param.updateCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param.updateCore","doc":"Low-level update `Param` function. It does not update the local context.\nConsider using `Param.update : Param → Expr → CompilerM Param` if you want the local context\nto be updated.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L233-L233","name":"Lean.Compiler.LCNF.Code.updateUnreach!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateUnreach!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L226-L226","name":"Lean.Compiler.LCNF.Code.updateJmp!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateJmp!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L219-L219","name":"Lean.Compiler.LCNF.Code.updateReturn!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateReturn!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L212-L212","name":"Lean.Compiler.LCNF.Code.updateFun!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateFun!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L204-L204","name":"Lean.Compiler.LCNF.Code.updateCont!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateCont!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L195-L195","name":"Lean.Compiler.LCNF.Code.updateLet!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateLet!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L188-L188","name":"Lean.Compiler.LCNF.Code.updateCases!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateCases!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L181-L181","name":"Lean.Compiler.LCNF.Code.updateAlts!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateAlts!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L174-L174","name":"Lean.Compiler.LCNF.AltCore.updateAlt!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.updateAlt!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L167-L167","name":"Lean.Compiler.LCNF.AltCore.updateCode","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.updateCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L157-L160","name":"Lean.Compiler.LCNF.AltCore.forCodeM","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.forCodeM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L153-L155","name":"Lean.Compiler.LCNF.AltCore.getParams","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.getParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L149-L151","name":"Lean.Compiler.LCNF.AltCore.getCode","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.getCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L146-L147","name":"Lean.Compiler.LCNF.instBEqFunDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqFunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L144-L144","name":"Lean.Compiler.LCNF.FunDecl.beq","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl.beq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L141-L142","name":"Lean.Compiler.LCNF.instBEqCode","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L139-L139","name":"Lean.Compiler.LCNF.Code.beq","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.beq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L97-L104","name":"Lean.Compiler.LCNF.attachCodeDecls.go","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.attachCodeDecls.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L94-L104","name":"Lean.Compiler.LCNF.attachCodeDecls","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.attachCodeDecls","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L91-L92","name":"Lean.Compiler.LCNF.CodeDecl.fvarId","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CodeDecl.fvarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L89-L89","name":"Lean.Compiler.LCNF.instInhabitedCodeDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedCodeDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L85-L89","name":"Lean.Compiler.LCNF.CodeDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CodeDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L79-L83","name":"Lean.Compiler.LCNF.CasesCore.getCtorNames","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore.getCtorNames","doc":"Return the constructor names that have an explicit (non-default) alternative.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L74-L74","name":"Lean.Compiler.LCNF.Cases","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Cases","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L73-L73","name":"Lean.Compiler.LCNF.FunDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L72-L72","name":"Lean.Compiler.LCNF.Alt","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L70-L70","name":"Lean.Compiler.LCNF.instInhabitedCode","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L62-L70","name":"Lean.Compiler.LCNF.Code","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L60-L60","name":"Lean.Compiler.LCNF.instInhabitedCasesCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedCasesCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L55-L60","name":"Lean.Compiler.LCNF.CasesCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L52-L53","name":"Lean.Compiler.LCNF.FunDeclCore.getArity","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.getArity","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L50-L50","name":"Lean.Compiler.LCNF.instInhabitedFunDeclCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedFunDeclCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L44-L50","name":"Lean.Compiler.LCNF.FunDeclCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L42-L42","name":"Lean.Compiler.LCNF.instBEqLetDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqLetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L42-L42","name":"Lean.Compiler.LCNF.instInhabitedLetDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedLetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L37-L42","name":"Lean.Compiler.LCNF.LetDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L35-L35","name":"Lean.Compiler.LCNF.instInhabitedAltCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedAltCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L32-L35","name":"Lean.Compiler.LCNF.AltCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L29-L30","name":"Lean.Compiler.LCNF.Param.toExpr","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param.toExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L27-L27","name":"Lean.Compiler.LCNF.instBEqParam","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqParam","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L27-L27","name":"Lean.Compiler.LCNF.instInhabitedParam","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedParam","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Compiler/LCNF/Basic.lean#L22-L27","name":"Lean.Compiler.LCNF.Param","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param","doc":""}]}