{"name":"Init.Meta","instances":[{"typeNames":["Lean.Name"],"name":"Lean.Name.instToStringName","className":"ToString"},{"typeNames":["Lean.Name"],"name":"Lean.Name.instReprName","className":"Repr"},{"typeNames":["Lean.Name","Lean.Name.instBEqName"],"name":"Lean.Name.instLawfulBEqNameInstBEqName","className":"LawfulBEq"},{"typeNames":["Eq","Lean.Name"],"name":"Lean.Name.instDecidableEqName","className":"Decidable"},{"typeNames":["Lean.NameGenerator"],"name":"Lean.instInhabitedNameGenerator","className":"Inhabited"},{"typeNames":[],"name":"Lean.monadNameGeneratorLift","className":"Lean.MonadNameGenerator"},{"typeNames":["Lean.Syntax.Preresolved"],"name":"Lean.Syntax.instReprPreresolved","className":"Repr"},{"typeNames":["Lean.Syntax"],"name":"Lean.Syntax.instReprSyntax","className":"Repr"},{"typeNames":["Lean.TSyntax"],"name":"Lean.Syntax.instReprTSyntax","className":"Repr"},{"typeNames":["Lean.TSyntax","List.cons","Lean.SyntaxNodeKind","List.nil","Lean.TSyntax","List.cons","Lean.SyntaxNodeKind"],"name":"Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","className":"Coe"},{"typeNames":["Lean.TSyntax","Lean.TSyntax","List.cons","Lean.SyntaxNodeKind"],"name":"Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKind","className":"Coe"},{"typeNames":["Lean.Syntax.Ident","Lean.Syntax.Term"],"name":"Lean.TSyntax.instCoeIdentTerm","className":"Coe"},{"typeNames":["Lean.Syntax.Term","Lean.TSyntax.mk","List.cons","Lean.SyntaxNodeKind","Lean.Name.mkStr1","List.nil","Lean.Syntax.ident","Lean.Syntax.Ident"],"name":"Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindMkStr1NilIdentIdent","className":"CoeDep"},{"typeNames":["Lean.Syntax.StrLit","Lean.Syntax.Term"],"name":"Lean.TSyntax.instCoeStrLitTerm","className":"Coe"},{"typeNames":["Lean.Syntax.NameLit","Lean.Syntax.Term"],"name":"Lean.TSyntax.instCoeNameLitTerm","className":"Coe"},{"typeNames":["Lean.Syntax.ScientificLit","Lean.Syntax.Term"],"name":"Lean.TSyntax.instCoeScientificLitTerm","className":"Coe"},{"typeNames":["Lean.Syntax.NumLit","Lean.Syntax.Term"],"name":"Lean.TSyntax.instCoeNumLitTerm","className":"Coe"},{"typeNames":["Lean.Syntax.CharLit","Lean.Syntax.Term"],"name":"Lean.TSyntax.instCoeCharLitTerm","className":"Coe"},{"typeNames":["Lean.Syntax.Ident","Lean.Syntax.Level"],"name":"Lean.TSyntax.instCoeIdentLevel","className":"Coe"},{"typeNames":["Lean.Syntax.NumLit","Lean.Syntax.Prio"],"name":"Lean.TSyntax.instCoeNumLitPrio","className":"Coe"},{"typeNames":["Lean.Syntax.NumLit","Lean.Syntax.Prec"],"name":"Lean.TSyntax.instCoeNumLitPrec","className":"Coe"},{"typeNames":["Lean.Syntax.Preresolved"],"name":"Lean.Syntax.instBEqPreresolved","className":"BEq"},{"typeNames":["Lean.Syntax"],"name":"Lean.Syntax.instBEqSyntax","className":"BEq"},{"typeNames":["Lean.TSyntax"],"name":"Lean.Syntax.instBEqTSyntax","className":"BEq"},{"typeNames":["Array","Lean.Syntax","Lean.Syntax.SepArray"],"name":"Lean.Syntax.instCoeArraySyntaxSepArray","className":"Coe"},{"typeNames":["Lean.TSyntaxArray","Lean.Syntax.TSepArray"],"name":"Lean.Syntax.instCoeTSyntaxArrayTSepArray","className":"Coe"},{"typeNames":[],"name":"Lean.instQuote","className":"Lean.Quote"},{"typeNames":["Lean.Syntax.Term","Lean.Name.mkStr1"],"name":"Lean.instQuoteTermMkStr1","className":"Lean.Quote"},{"typeNames":["Bool","Lean.Name.mkStr1"],"name":"Lean.instQuoteBoolMkStr1","className":"Lean.Quote"},{"typeNames":["String","Lean.strLitKind"],"name":"Lean.instQuoteStringStrLitKind","className":"Lean.Quote"},{"typeNames":["Nat","Lean.numLitKind"],"name":"Lean.instQuoteNatNumLitKind","className":"Lean.Quote"},{"typeNames":["Substring","Lean.Name.mkStr1"],"name":"Lean.instQuoteSubstringMkStr1","className":"Lean.Quote"},{"typeNames":["Lean.Name","Lean.Name.mkStr1"],"name":"Lean.instQuoteNameMkStr1","className":"Lean.Quote"},{"typeNames":["Prod","Lean.Name.mkStr1"],"name":"Lean.instQuoteProdMkStr1","className":"Lean.Quote"},{"typeNames":["List","Lean.Name.mkStr1"],"name":"Lean.instQuoteListMkStr1","className":"Lean.Quote"},{"typeNames":["Array","Lean.Name.mkStr1"],"name":"Lean.instQuoteArrayMkStr1","className":"Lean.Quote"},{"typeNames":["Option","Lean.Name.mkStr1"],"name":"Lean.Option.hasQuote","className":"Lean.Quote"},{"typeNames":["Lean.Syntax.SepArray"],"name":"Lean.Syntax.instEmptyCollectionSepArray","className":"EmptyCollection"},{"typeNames":["Lean.Syntax.TSepArray"],"name":"Lean.Syntax.instEmptyCollectionTSepArray","className":"EmptyCollection"},{"typeNames":["Lean.Syntax.SepArray","Array","Lean.Syntax"],"name":"Lean.Syntax.instCoeTailSepArrayArraySyntax","className":"CoeTail"},{"typeNames":["Lean.Syntax.TSepArray","Lean.TSyntaxArray"],"name":"Lean.Syntax.instCoeTSepArrayTSyntaxArray","className":"Coe"},{"typeNames":["Lean.TSyntaxArray","Lean.TSyntaxArray"],"name":"Lean.Syntax.instCoeTSyntaxArray","className":"Coe"},{"typeNames":["Lean.TSyntaxArray","Array","Lean.Syntax"],"name":"Lean.Syntax.instCoeTSyntaxArrayArraySyntax","className":"Coe"},{"typeNames":["Lean.Syntax.Ident","Lean.TSyntax","List.cons","Lean.SyntaxNodeKind","Lean.Name.mkStr4","List.nil"],"name":"Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindMkStr4Nil","className":"Coe"},{"typeNames":["Lean.Syntax.Term","Lean.TSyntax","List.cons","Lean.SyntaxNodeKind","Lean.Name.mkStr4","List.nil"],"name":"Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindMkStr4Nil","className":"Coe"},{"typeNames":["Lean.Meta.TransparencyMode"],"name":"Lean.Meta.instInhabitedTransparencyMode","className":"Inhabited"},{"typeNames":["Lean.Meta.TransparencyMode"],"name":"Lean.Meta.instBEqTransparencyMode","className":"BEq"},{"typeNames":["Lean.Meta.TransparencyMode"],"name":"Lean.Meta.instReprTransparencyMode","className":"Repr"},{"typeNames":["Lean.Meta.EtaStructMode"],"name":"Lean.Meta.instInhabitedEtaStructMode","className":"Inhabited"},{"typeNames":["Lean.Meta.EtaStructMode"],"name":"Lean.Meta.instBEqEtaStructMode","className":"BEq"},{"typeNames":["Lean.Meta.EtaStructMode"],"name":"Lean.Meta.instReprEtaStructMode","className":"Repr"},{"typeNames":["Lean.Meta.DSimp.Config"],"name":"Lean.Meta.DSimp.instInhabitedConfig","className":"Inhabited"},{"typeNames":["Lean.Meta.DSimp.Config"],"name":"Lean.Meta.DSimp.instBEqConfig","className":"BEq"},{"typeNames":["Lean.Meta.DSimp.Config"],"name":"Lean.Meta.DSimp.instReprConfig","className":"Repr"},{"typeNames":["Lean.Meta.Simp.Config"],"name":"Lean.Meta.Simp.instInhabitedConfig","className":"Inhabited"},{"typeNames":["Lean.Meta.Simp.Config"],"name":"Lean.Meta.Simp.instBEqConfig","className":"BEq"},{"typeNames":["Lean.Meta.Simp.Config"],"name":"Lean.Meta.Simp.instReprConfig","className":"Repr"}],"imports":["Init.Data.Array.Basic","Init.Data.Option.BasicAux"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1334-L1337","name":"Lean.Parser.Tactic.dsimpAutoUnfold","docLink":"./Init/Meta.html#Lean.Parser.Tactic.dsimpAutoUnfold","doc":"`dsimp!` is shorthand for `dsimp` with `autoUnfold := true`.\nThis will rewrite with all equation lemmas, which can be used to\npartially evaluate many definitions. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1331-L1332","name":"Lean.Parser.Tactic.simpAllArithAutoUnfold","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpAllArithAutoUnfold","doc":"`simp_all_arith!` combines the effects of `simp_all`, `simp_arith` and `simp!`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1328-L1329","name":"Lean.Parser.Tactic.simpAllArith","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpAllArith","doc":"`simp_all_arith` combines the effects of `simp_all` and `simp_arith`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1323-L1326","name":"Lean.Parser.Tactic.simpAllAutoUnfold","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpAllAutoUnfold","doc":"`simp_all!` is shorthand for `simp_all` with `autoUnfold := true`.\nThis will rewrite with all equation lemmas, which can be used to\npartially evaluate many definitions. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1318-L1321","name":"Lean.Parser.Tactic.simpArithAutoUnfold","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpArithAutoUnfold","doc":"`simp_arith!` is shorthand for `simp_arith` with `autoUnfold := true`.\nThis will rewrite with all equation lemmas, which can be used to\npartially evaluate many definitions. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1314-L1316","name":"Lean.Parser.Tactic.simpArith","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpArith","doc":"`simp_arith` is shorthand for `simp` with `arith := true`.\nThis enables the use of normalization by linear arithmetic. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1309-L1312","name":"Lean.Parser.Tactic.simpAutoUnfold","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpAutoUnfold","doc":"`simp!` is shorthand for `simp` with `autoUnfold := true`.\nThis will rewrite with all equation lemmas, which can be used to\npartially evaluate many definitions. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1291-L1307","name":"Lean.Parser.Tactic.declareSimpLikeTactic","docLink":"./Init/Meta.html#Lean.Parser.Tactic.declareSimpLikeTactic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1289-L1289","name":"Lean.Parser.Tactic.dsimpKind","docLink":"./Init/Meta.html#Lean.Parser.Tactic.dsimpKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1288-L1288","name":"Lean.Parser.Tactic.simpAllKind","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpAllKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1285-L1286","name":"Lean.Parser.Tactic.tacticErw__","docLink":"./Init/Meta.html#Lean.Parser.Tactic.tacticErw__","doc":"`erw [rules]` is a shorthand for `rw (config := { transparency := .default }) [rules]`.\nThis does rewriting up to unfolding of regular definitions (by comparison to regular `rw`\nwhich only unfolds `@[reducible]` definitions). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1272-L1274","name":"Lean.Meta.Rewrite.Config","docLink":"./Init/Meta.html#Lean.Meta.Rewrite.Config","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1257-L1266","name":"Lean.Meta.Simp.neutralConfig","docLink":"./Init/Meta.html#Lean.Meta.Simp.neutralConfig","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1254-L1255","name":"Lean.Meta.Simp.ConfigCtx","docLink":"./Init/Meta.html#Lean.Meta.Simp.ConfigCtx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1251-L1251","name":"Lean.Meta.Simp.instReprConfig","docLink":"./Init/Meta.html#Lean.Meta.Simp.instReprConfig","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1251-L1251","name":"Lean.Meta.Simp.instBEqConfig","docLink":"./Init/Meta.html#Lean.Meta.Simp.instBEqConfig","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1251-L1251","name":"Lean.Meta.Simp.instInhabitedConfig","docLink":"./Init/Meta.html#Lean.Meta.Simp.instInhabitedConfig","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1231-L1251","name":"Lean.Meta.Simp.Config","docLink":"./Init/Meta.html#Lean.Meta.Simp.Config","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1229-L1229","name":"Lean.Meta.Simp.defaultMaxSteps","docLink":"./Init/Meta.html#Lean.Meta.Simp.defaultMaxSteps","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1223-L1223","name":"Lean.Meta.DSimp.instReprConfig","docLink":"./Init/Meta.html#Lean.Meta.DSimp.instReprConfig","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1223-L1223","name":"Lean.Meta.DSimp.instBEqConfig","docLink":"./Init/Meta.html#Lean.Meta.DSimp.instBEqConfig","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1223-L1223","name":"Lean.Meta.DSimp.instInhabitedConfig","docLink":"./Init/Meta.html#Lean.Meta.DSimp.instInhabitedConfig","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1214-L1223","name":"Lean.Meta.DSimp.Config","docLink":"./Init/Meta.html#Lean.Meta.DSimp.Config","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1210-L1210","name":"Lean.Meta.instReprEtaStructMode","docLink":"./Init/Meta.html#Lean.Meta.instReprEtaStructMode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1210-L1210","name":"Lean.Meta.instBEqEtaStructMode","docLink":"./Init/Meta.html#Lean.Meta.instBEqEtaStructMode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1210-L1210","name":"Lean.Meta.instInhabitedEtaStructMode","docLink":"./Init/Meta.html#Lean.Meta.instInhabitedEtaStructMode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1203-L1210","name":"Lean.Meta.EtaStructMode","docLink":"./Init/Meta.html#Lean.Meta.EtaStructMode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1201-L1201","name":"Lean.Meta.instReprTransparencyMode","docLink":"./Init/Meta.html#Lean.Meta.instReprTransparencyMode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1201-L1201","name":"Lean.Meta.instBEqTransparencyMode","docLink":"./Init/Meta.html#Lean.Meta.instBEqTransparencyMode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1201-L1201","name":"Lean.Meta.instInhabitedTransparencyMode","docLink":"./Init/Meta.html#Lean.Meta.instInhabitedTransparencyMode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1199-L1201","name":"Lean.Meta.TransparencyMode","docLink":"./Init/Meta.html#Lean.Meta.TransparencyMode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1191-L1193","name":"Lean.TSyntax.expandInterpolatedStr","docLink":"./Init/Meta.html#Lean.TSyntax.expandInterpolatedStr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1176-L1188","name":"Lean.TSyntax.expandInterpolatedStrChunks","docLink":"./Init/Meta.html#Lean.TSyntax.expandInterpolatedStrChunks","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1169-L1170","name":"Lean.Syntax.getSepArgs","docLink":"./Init/Meta.html#Lean.Syntax.getSepArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1164-L1167","name":"Lean.Syntax.isInterpolatedStrLit?","docLink":"./Init/Meta.html#Lean.Syntax.isInterpolatedStrLit?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1134-L1134","name":"autoParam","docLink":"./Init/Meta.html#autoParam","doc":"Gadget for automatic parameter support. This is similar to the `optParam` gadget, but it uses\nthe given tactic.\nLike `optParam`, this gadget only affects elaboration.\nFor example, the tactic will *not* be invoked during type class resolution. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1123-L1124","name":"Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindMkStr4Nil","docLink":"./Init/Meta.html#Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindMkStr4Nil","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1120-L1121","name":"Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindMkStr4Nil","docLink":"./Init/Meta.html#Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindMkStr4Nil","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1117-L1118","name":"Lean.Syntax.instCoeTSyntaxArrayArraySyntax","docLink":"./Init/Meta.html#Lean.Syntax.instCoeTSyntaxArrayArraySyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1114-L1115","name":"Lean.Syntax.instCoeTSyntaxArray","docLink":"./Init/Meta.html#Lean.Syntax.instCoeTSyntaxArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1111-L1112","name":"Lean.Syntax.instCoeTSepArrayTSyntaxArray","docLink":"./Init/Meta.html#Lean.Syntax.instCoeTSepArrayTSyntaxArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1108-L1109","name":"Lean.Syntax.instCoeTailSepArrayArraySyntax","docLink":"./Init/Meta.html#Lean.Syntax.instCoeTailSepArrayArraySyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1100-L1101","name":"Lean.Syntax.instEmptyCollectionTSepArray","docLink":"./Init/Meta.html#Lean.Syntax.instEmptyCollectionTSepArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1097-L1098","name":"Lean.Syntax.instEmptyCollectionSepArray","docLink":"./Init/Meta.html#Lean.Syntax.instEmptyCollectionSepArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1091-L1095","name":"Lean.Syntax.TSepArray.push","docLink":"./Init/Meta.html#Lean.Syntax.TSepArray.push","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1088-L1089","name":"Lean.Syntax.TSepArray.getElems","docLink":"./Init/Meta.html#Lean.Syntax.TSepArray.getElems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1085-L1086","name":"Lean.Syntax.SepArray.getElems","docLink":"./Init/Meta.html#Lean.Syntax.SepArray.getElems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1078-L1079","name":"Array.mapSepElems","docLink":"./Init/Meta.html#Array.mapSepElems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1075-L1076","name":"Array.mapSepElemsM","docLink":"./Init/Meta.html#Array.mapSepElemsM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1061-L1062","name":"Array.filterSepElems","docLink":"./Init/Meta.html#Array.filterSepElems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1058-L1059","name":"Array.filterSepElemsM","docLink":"./Init/Meta.html#Array.filterSepElemsM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1036-L1036","name":"Array.getSepElems","docLink":"./Init/Meta.html#Array.getSepElems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1028-L1030","name":"Lean.evalOptPrio","docLink":"./Init/Meta.html#Lean.evalOptPrio","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1026-L1026","name":"Lean.termEval_prio_","docLink":"./Init/Meta.html#Lean.termEval_prio_","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1013-L1018","name":"Lean.evalPrio","docLink":"./Init/Meta.html#Lean.evalPrio","doc":"Evaluator for `prio` DSL "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L1010-L1010","name":"Lean.termEval_prec_","docLink":"./Init/Meta.html#Lean.termEval_prec_","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L997-L1002","name":"Lean.evalPrec","docLink":"./Init/Meta.html#Lean.evalPrec","doc":"Evaluator for `prec` DSL "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L990-L993","name":"Lean.Option.hasQuote","docLink":"./Init/Meta.html#Lean.Option.hasQuote","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L987-L988","name":"Lean.instQuoteArrayMkStr1","docLink":"./Init/Meta.html#Lean.instQuoteArrayMkStr1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L971-L972","name":"Lean.instQuoteListMkStr1","docLink":"./Init/Meta.html#Lean.instQuoteListMkStr1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L963-L965","name":"Lean.instQuoteProdMkStr1","docLink":"./Init/Meta.html#Lean.instQuoteProdMkStr1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L958-L961","name":"Lean.instQuoteNameMkStr1","docLink":"./Init/Meta.html#Lean.instQuoteNameMkStr1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L953-L956","name":"Lean.quoteNameMk","docLink":"./Init/Meta.html#Lean.quoteNameMk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L943-L943","name":"Lean.instQuoteSubstringMkStr1","docLink":"./Init/Meta.html#Lean.instQuoteSubstringMkStr1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L942-L942","name":"Lean.instQuoteNatNumLitKind","docLink":"./Init/Meta.html#Lean.instQuoteNatNumLitKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L941-L941","name":"Lean.instQuoteStringStrLitKind","docLink":"./Init/Meta.html#Lean.instQuoteStringStrLitKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L940-L940","name":"Lean.instQuoteBoolMkStr1","docLink":"./Init/Meta.html#Lean.instQuoteBoolMkStr1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L939-L939","name":"Lean.instQuoteTermMkStr1","docLink":"./Init/Meta.html#Lean.instQuoteTermMkStr1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L937-L937","name":"Lean.instQuote","docLink":"./Init/Meta.html#Lean.instQuote","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L932-L933","name":"Lean.Quote","docLink":"./Init/Meta.html#Lean.Quote","doc":"Reflect a runtime datum back to surface syntax (best-effort). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L924-L925","name":"Lean.TSyntax.Compat.instCoeTailArraySyntaxTSepArray","docLink":"./Init/Meta.html#Lean.TSyntax.Compat.instCoeTailArraySyntaxTSepArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L919-L920","name":"Lean.TSyntax.getName","docLink":"./Init/Meta.html#Lean.TSyntax.getName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L916-L917","name":"Lean.TSyntax.getChar","docLink":"./Init/Meta.html#Lean.TSyntax.getChar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L913-L914","name":"Lean.TSyntax.getString","docLink":"./Init/Meta.html#Lean.TSyntax.getString","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L910-L911","name":"Lean.TSyntax.getScientific","docLink":"./Init/Meta.html#Lean.TSyntax.getScientific","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L907-L908","name":"Lean.TSyntax.getId","docLink":"./Init/Meta.html#Lean.TSyntax.getId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L904-L905","name":"Lean.TSyntax.getNat","docLink":"./Init/Meta.html#Lean.TSyntax.getNat","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L897-L898","name":"Lean.Syntax.find?","docLink":"./Init/Meta.html#Lean.Syntax.find?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L893-L895","name":"Lean.Syntax.findAux","docLink":"./Init/Meta.html#Lean.Syntax.findAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L888-L891","name":"Lean.Syntax.getOptionalIdent?","docLink":"./Init/Meta.html#Lean.Syntax.getOptionalIdent?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L881-L886","name":"Lean.Syntax.isNone","docLink":"./Init/Meta.html#Lean.Syntax.isNone","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L877-L879","name":"Lean.Syntax.isToken","docLink":"./Init/Meta.html#Lean.Syntax.isToken","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L873-L875","name":"Lean.Syntax.isAtom","docLink":"./Init/Meta.html#Lean.Syntax.isAtom","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L869-L871","name":"Lean.Syntax.hasArgs","docLink":"./Init/Meta.html#Lean.Syntax.hasArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L864-L867","name":"Lean.Syntax.isNameLit?","docLink":"./Init/Meta.html#Lean.Syntax.isNameLit?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L845-L862","name":"Lean.Syntax.decodeNameLit","docLink":"./Init/Meta.html#Lean.Syntax.decodeNameLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L842-L843","name":"Lean.Syntax.splitNameLit","docLink":"./Init/Meta.html#Lean.Syntax.splitNameLit","doc":"Split a name literal (without the backtick) into its dot-separated components. For example,\n`foo.bla.«bo.o»` ↦ `[\"foo\", \"bla\", \"«bo.o»\"]`. If the literal cannot be parsed, return `[]`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L810-L813","name":"Lean.Syntax.isCharLit?","docLink":"./Init/Meta.html#Lean.Syntax.isCharLit?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L802-L808","name":"Lean.Syntax.decodeCharLit","docLink":"./Init/Meta.html#Lean.Syntax.decodeCharLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L797-L800","name":"Lean.Syntax.isStrLit?","docLink":"./Init/Meta.html#Lean.Syntax.isStrLit?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L794-L795","name":"Lean.Syntax.decodeStrLit","docLink":"./Init/Meta.html#Lean.Syntax.decodeStrLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L781-L792","name":"Lean.Syntax.decodeStrLitAux","docLink":"./Init/Meta.html#Lean.Syntax.decodeStrLitAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L759-L779","name":"Lean.Syntax.decodeQuotedChar","docLink":"./Init/Meta.html#Lean.Syntax.decodeQuotedChar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L754-L757","name":"Lean.Syntax.toNat","docLink":"./Init/Meta.html#Lean.Syntax.toNat","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L749-L752","name":"Lean.Syntax.isIdOrAtom?","docLink":"./Init/Meta.html#Lean.Syntax.isIdOrAtom?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L744-L747","name":"Lean.Syntax.isScientificLit?","docLink":"./Init/Meta.html#Lean.Syntax.isScientificLit?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L730-L742","name":"Lean.Syntax.decodeScientificLitVal?.decode","docLink":"./Init/Meta.html#Lean.Syntax.decodeScientificLitVal?.decode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L718-L728","name":"Lean.Syntax.decodeScientificLitVal?.decodeAfterDot","docLink":"./Init/Meta.html#Lean.Syntax.decodeScientificLitVal?.decodeAfterDot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L708-L716","name":"Lean.Syntax.decodeScientificLitVal?.decodeExp","docLink":"./Init/Meta.html#Lean.Syntax.decodeScientificLitVal?.decodeExp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L693-L706","name":"Lean.Syntax.decodeScientificLitVal?.decodeAfterExp","docLink":"./Init/Meta.html#Lean.Syntax.decodeScientificLitVal?.decodeAfterExp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L684-L742","name":"Lean.Syntax.decodeScientificLitVal?","docLink":"./Init/Meta.html#Lean.Syntax.decodeScientificLitVal?","doc":"Decodes a 'scientific number' string which is consumed by the `OfScientific` class.\nTakes as input a string such as `123`, `123.456e7` and returns a triple `(n, sign, e)` with value given by\n`n * 10^-e` if `sign` else `n * 10^e`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L677-L678","name":"Lean.Syntax.isFieldIdx?","docLink":"./Init/Meta.html#Lean.Syntax.isFieldIdx?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L674-L675","name":"Lean.Syntax.isNatLit?","docLink":"./Init/Meta.html#Lean.Syntax.isNatLit?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L658-L667","name":"Lean.Syntax.isLit?","docLink":"./Init/Meta.html#Lean.Syntax.isLit?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L641-L656","name":"Lean.Syntax.decodeNatLitVal?","docLink":"./Init/Meta.html#Lean.Syntax.decodeNatLitVal?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L595-L596","name":"Lean.Syntax.mkNameLit","docLink":"./Init/Meta.html#Lean.Syntax.mkNameLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L592-L593","name":"Lean.Syntax.mkScientificLit","docLink":"./Init/Meta.html#Lean.Syntax.mkScientificLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L589-L590","name":"Lean.Syntax.mkNumLit","docLink":"./Init/Meta.html#Lean.Syntax.mkNumLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L586-L587","name":"Lean.Syntax.mkStrLit","docLink":"./Init/Meta.html#Lean.Syntax.mkStrLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L582-L584","name":"Lean.Syntax.mkLit","docLink":"./Init/Meta.html#Lean.Syntax.mkLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L579-L580","name":"Lean.Syntax.mkCApp","docLink":"./Init/Meta.html#Lean.Syntax.mkCApp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L575-L577","name":"Lean.Syntax.mkApp","docLink":"./Init/Meta.html#Lean.Syntax.mkApp","doc":"Create syntax representing a Lean term application, but avoid degenerate empty applications. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L571-L572","name":"Lean.Syntax.instCoeTSyntaxArrayTSepArray","docLink":"./Init/Meta.html#Lean.Syntax.instCoeTSyntaxArrayTSepArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L568-L569","name":"Lean.Syntax.instCoeArraySyntaxSepArray","docLink":"./Init/Meta.html#Lean.Syntax.instCoeArraySyntaxSepArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L564-L566","name":"Lean.Syntax.SepArray.ofElemsUsingRef","docLink":"./Init/Meta.html#Lean.Syntax.SepArray.ofElemsUsingRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L561-L562","name":"Lean.Syntax.SepArray.ofElems","docLink":"./Init/Meta.html#Lean.Syntax.SepArray.ofElems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L558-L559","name":"Lean.Syntax.mkSep","docLink":"./Init/Meta.html#Lean.Syntax.mkSep","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L553-L554","name":"Lean.mkHole","docLink":"./Init/Meta.html#Lean.mkHole","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L548-L551","name":"Lean.mkOptionalNode","docLink":"./Init/Meta.html#Lean.mkOptionalNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L537-L546","name":"Lean.mkSepArray","docLink":"./Init/Meta.html#Lean.mkSepArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L534-L535","name":"Lean.mkGroupNode","docLink":"./Init/Meta.html#Lean.mkGroupNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L531-L532","name":"Lean.mkNullNode","docLink":"./Init/Meta.html#Lean.mkNullNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L528-L529","name":"Lean.mkIdent","docLink":"./Init/Meta.html#Lean.mkIdent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L524-L525","name":"Lean.mkCIdent","docLink":"./Init/Meta.html#Lean.mkCIdent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L521-L522","name":"Lean.mkCIdentFromRef","docLink":"./Init/Meta.html#Lean.mkCIdentFromRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L516-L519","name":"Lean.mkCIdentFrom","docLink":"./Init/Meta.html#Lean.mkCIdentFrom","doc":"Create an identifier referring to a constant `c` copying the position from `src`.\nThis variant of `mkIdentFrom` makes sure that the identifier cannot accidentally\nbe captured. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L509-L510","name":"Lean.mkIdentFromRef","docLink":"./Init/Meta.html#Lean.mkIdentFromRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L506-L507","name":"Lean.mkIdentFrom","docLink":"./Init/Meta.html#Lean.mkIdentFrom","doc":"Create an identifier copying the position from `src`.\nTo refer to a specific constant, use `mkCIdentFrom` instead. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L487-L499","name":"Lean.expandMacros","docLink":"./Init/Meta.html#Lean.expandMacros","doc":"Expand macros in the given syntax.\nA node with kind `k` is visited only if `p k` is true.\n\nNote that the default value for `p` returns false for `by ...` nodes.\nThis is a \"hack\". The tactic framework abuses the macro system to implement extensible tactics.\nFor example, one can define\n```lean\nsyntax \"my_trivial\" : tactic -- extensible tactic\n\nmacro_rules | `(tactic| my_trivial) => `(tactic| decide)\nmacro_rules | `(tactic| my_trivial) => `(tactic| assumption)\n```\nWhen the tactic evaluator finds the tactic `my_trivial`, it tries to evaluate the `macro_rule` expansions\nuntil one \"works\", i.e., the macro expansion is evaluated without producing an exception.\nWe say this solution is a bit hackish because the term elaborator may invoke `expandMacros` with `(p := fun _ => true)`,\nand expand the tactic macros as just macros. In the example above, `my_trivial` would be replaced with `assumption`,\n`decide` would not be tried if `assumption` fails at tactic evaluation time.\n\nWe are considering two possible solutions for this issue:\n1- A proper extensible tactic feature that does not rely on the macro system.\n\n2- Typed macros that know the syntax categories they're working in. Then, we would be able to select which\n   syntatic categories are expanded by `expandMacros`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L458-L460","name":"Lean.Module","docLink":"./Init/Meta.html#Lean.Module","doc":"Syntax objects for a Lean module. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L454-L455","name":"Lean.mkNode","docLink":"./Init/Meta.html#Lean.mkNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L449-L452","name":"Lean.withHeadRefOnly","docLink":"./Init/Meta.html#Lean.withHeadRefOnly","doc":"Use the head atom/identifier of the current `ref` as the `ref` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L443-L444","name":"Lean.Syntax.mkSynthetic","docLink":"./Init/Meta.html#Lean.Syntax.mkSynthetic","doc":"Ensure head position is synthetic. The server regards syntax as \"original\" only if both head and tail info are `original`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L439-L440","name":"Lean.Syntax.copyHeadTailInfoFrom","docLink":"./Init/Meta.html#Lean.Syntax.copyHeadTailInfoFrom","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L432-L437","name":"Lean.Syntax.getHead?","docLink":"./Init/Meta.html#Lean.Syntax.getHead?","doc":"Return the first atom/identifier that has position information "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L425-L429","name":"Lean.Syntax.setInfo","docLink":"./Init/Meta.html#Lean.Syntax.setInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L420-L423","name":"Lean.Syntax.setHeadInfo","docLink":"./Init/Meta.html#Lean.Syntax.setHeadInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L411-L418","name":"Lean.Syntax.setHeadInfoAux","docLink":"./Init/Meta.html#Lean.Syntax.setHeadInfoAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L397-L400","name":"Lean.Syntax.unsetTrailing","docLink":"./Init/Meta.html#Lean.Syntax.unsetTrailing","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L392-L395","name":"Lean.Syntax.setTailInfo","docLink":"./Init/Meta.html#Lean.Syntax.setTailInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L383-L390","name":"Lean.Syntax.setTailInfoAux","docLink":"./Init/Meta.html#Lean.Syntax.setTailInfoAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L363-L371","name":"Lean.Syntax.getSubstring?","docLink":"./Init/Meta.html#Lean.Syntax.getSubstring?","doc":"Return substring of original input covering `stx`.\nResult is meaningful only if all involved `SourceInfo.original`s refer to the same string (as is the case after parsing). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L355-L358","name":"Lean.Syntax.getTrailingSize","docLink":"./Init/Meta.html#Lean.Syntax.getTrailingSize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L352-L353","name":"Lean.Syntax.getTailInfo","docLink":"./Init/Meta.html#Lean.Syntax.getTailInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L344-L350","name":"Lean.Syntax.getTailInfo?","docLink":"./Init/Meta.html#Lean.Syntax.getTailInfo?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L342-L342","name":"Lean.Syntax.instBEqTSyntax","docLink":"./Init/Meta.html#Lean.Syntax.instBEqTSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L341-L341","name":"Lean.Syntax.instBEqSyntax","docLink":"./Init/Meta.html#Lean.Syntax.instBEqSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L334-L339","name":"Lean.Syntax.structEq","docLink":"./Init/Meta.html#Lean.Syntax.structEq","doc":"Compare syntax structures modulo source info. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L331-L331","name":"Lean.Syntax.instBEqPreresolved","docLink":"./Init/Meta.html#Lean.Syntax.instBEqPreresolved","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L322-L323","name":"Lean.TSyntax.Compat.instCoeTailArraySyntaxTSyntaxArray","docLink":"./Init/Meta.html#Lean.TSyntax.Compat.instCoeTailArraySyntaxTSyntaxArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L319-L320","name":"Lean.TSyntax.Compat.instCoeTailSyntaxTSyntax","docLink":"./Init/Meta.html#Lean.TSyntax.Compat.instCoeTailSyntaxTSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L314-L315","name":"Lean.TSyntax.instCoeNumLitPrec","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeNumLitPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L311-L312","name":"Lean.TSyntax.instCoeNumLitPrio","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeNumLitPrio","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L308-L309","name":"Lean.TSyntax.instCoeIdentLevel","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeIdentLevel","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L305-L306","name":"Lean.TSyntax.instCoeCharLitTerm","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeCharLitTerm","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L302-L303","name":"Lean.TSyntax.instCoeNumLitTerm","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeNumLitTerm","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L299-L300","name":"Lean.TSyntax.instCoeScientificLitTerm","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeScientificLitTerm","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L296-L297","name":"Lean.TSyntax.instCoeNameLitTerm","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeNameLitTerm","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L293-L294","name":"Lean.TSyntax.instCoeStrLitTerm","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeStrLitTerm","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L290-L291","name":"Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindMkStr1NilIdentIdent","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindMkStr1NilIdentIdent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L287-L288","name":"Lean.TSyntax.instCoeIdentTerm","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeIdentTerm","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L284-L285","name":"Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKind","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L281-L282","name":"Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L273-L273","name":"Lean.Syntax.NumLit","docLink":"./Init/Meta.html#Lean.Syntax.NumLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L272-L272","name":"Lean.Syntax.ScientificLit","docLink":"./Init/Meta.html#Lean.Syntax.ScientificLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L271-L271","name":"Lean.Syntax.NameLit","docLink":"./Init/Meta.html#Lean.Syntax.NameLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L270-L270","name":"Lean.Syntax.CharLit","docLink":"./Init/Meta.html#Lean.Syntax.CharLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L269-L269","name":"Lean.Syntax.StrLit","docLink":"./Init/Meta.html#Lean.Syntax.StrLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L268-L268","name":"Lean.Syntax.Ident","docLink":"./Init/Meta.html#Lean.Syntax.Ident","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L267-L267","name":"Lean.Syntax.Prio","docLink":"./Init/Meta.html#Lean.Syntax.Prio","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L266-L266","name":"Lean.Syntax.Prec","docLink":"./Init/Meta.html#Lean.Syntax.Prec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L265-L265","name":"Lean.Syntax.Tactic","docLink":"./Init/Meta.html#Lean.Syntax.Tactic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L264-L264","name":"Lean.Syntax.Level","docLink":"./Init/Meta.html#Lean.Syntax.Level","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L263-L263","name":"Lean.Syntax.Command","docLink":"./Init/Meta.html#Lean.Syntax.Command","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L262-L262","name":"Lean.Syntax.Term","docLink":"./Init/Meta.html#Lean.Syntax.Term","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L260-L260","name":"Lean.Syntax.instReprTSyntax","docLink":"./Init/Meta.html#Lean.Syntax.instReprTSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L259-L259","name":"Lean.Syntax.instReprSyntax","docLink":"./Init/Meta.html#Lean.Syntax.instReprSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L258-L258","name":"Lean.Syntax.instReprPreresolved","docLink":"./Init/Meta.html#Lean.Syntax.instReprPreresolved","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L251-L254","name":"Lean.monadNameGeneratorLift","docLink":"./Init/Meta.html#Lean.monadNameGeneratorLift","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L245-L249","name":"Lean.mkFreshId","docLink":"./Init/Meta.html#Lean.mkFreshId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L239-L241","name":"Lean.MonadNameGenerator","docLink":"./Init/Meta.html#Lean.MonadNameGenerator","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L233-L235","name":"Lean.NameGenerator.mkChild","docLink":"./Init/Meta.html#Lean.NameGenerator.mkChild","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L230-L231","name":"Lean.NameGenerator.next","docLink":"./Init/Meta.html#Lean.NameGenerator.next","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L227-L228","name":"Lean.NameGenerator.curr","docLink":"./Init/Meta.html#Lean.NameGenerator.curr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L223-L223","name":"Lean.instInhabitedNameGenerator","docLink":"./Init/Meta.html#Lean.instInhabitedNameGenerator","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L220-L223","name":"Lean.NameGenerator","docLink":"./Init/Meta.html#Lean.NameGenerator","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L215-L216","name":"Lean.Name.instDecidableEqName","docLink":"./Init/Meta.html#Lean.Name.instDecidableEqName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L211-L213","name":"Lean.Name.instLawfulBEqNameInstBEqName","docLink":"./Init/Meta.html#Lean.Name.instLawfulBEqNameInstBEqName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L207-L209","name":"Lean.Name.beq_iff_eq","docLink":"./Init/Meta.html#Lean.Name.beq_iff_eq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L201-L205","name":"Lean.Name.appendBefore","docLink":"./Init/Meta.html#Lean.Name.appendBefore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L195-L198","name":"Lean.Name.appendIndexAfter","docLink":"./Init/Meta.html#Lean.Name.appendIndexAfter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L189-L192","name":"Lean.Name.appendAfter","docLink":"./Init/Meta.html#Lean.Name.appendAfter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L181-L186","name":"Lean.Name.modifyBase","docLink":"./Init/Meta.html#Lean.Name.modifyBase","doc":"Remove macros scopes, apply `f`, and put them back "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L174-L178","name":"Lean.Name.eraseSuffix?","docLink":"./Init/Meta.html#Lean.Name.eraseSuffix?","doc":"`eraseSuffix? n s` return `n'` if `n` is of the form `n == n' ++ s`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L165-L169","name":"Lean.Name.replacePrefix","docLink":"./Init/Meta.html#Lean.Name.replacePrefix","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L161-L163","name":"Lean.Name.capitalize","docLink":"./Init/Meta.html#Lean.Name.capitalize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L158-L159","name":"Lean.Name.instReprName","docLink":"./Init/Meta.html#Lean.Name.instReprName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L148-L156","name":"Lean.Name.reprPrec","docLink":"./Init/Meta.html#Lean.Name.reprPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L140-L141","name":"Lean.Name.instToStringName","docLink":"./Init/Meta.html#Lean.Name.instToStringName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L133-L138","name":"Lean.Name.toString.maybePseudoSyntax","docLink":"./Init/Meta.html#Lean.Name.toString.maybePseudoSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L129-L138","name":"Lean.Name.toString","docLink":"./Init/Meta.html#Lean.Name.toString","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L127-L127","name":"Lean.Name.toStringWithSep.maybeEscape","docLink":"./Init/Meta.html#Lean.Name.toStringWithSep.maybeEscape","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L120-L127","name":"Lean.Name.toStringWithSep","docLink":"./Init/Meta.html#Lean.Name.toStringWithSep","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L113-L116","name":"Lean.Name.escapePart","docLink":"./Init/Meta.html#Lean.Name.escapePart","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L108-L111","name":"Lean.Name.isInaccessibleUserName","docLink":"./Init/Meta.html#Lean.Name.isInaccessibleUserName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L100-L105","name":"Lean.Name.getRoot","docLink":"./Init/Meta.html#Lean.Name.getRoot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L96-L96","name":"Lean.isIdEndEscape","docLink":"./Init/Meta.html#Lean.isIdEndEscape","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L95-L95","name":"Lean.isIdBeginEscape","docLink":"./Init/Meta.html#Lean.isIdBeginEscape","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L94-L94","name":"Lean.idEndEscape","docLink":"./Init/Meta.html#Lean.idEndEscape","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L93-L93","name":"Lean.idBeginEscape","docLink":"./Init/Meta.html#Lean.idBeginEscape","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L90-L91","name":"Lean.isIdRest","docLink":"./Init/Meta.html#Lean.isIdRest","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L87-L88","name":"Lean.isIdFirst","docLink":"./Init/Meta.html#Lean.isIdFirst","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L82-L85","name":"Lean.isSubScriptAlnum","docLink":"./Init/Meta.html#Lean.isSubScriptAlnum","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L79-L80","name":"Lean.isNumericSubscript","docLink":"./Init/Meta.html#Lean.isNumericSubscript","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L71-L77","name":"Lean.isLetterLike","docLink":"./Init/Meta.html#Lean.isLetterLike","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L68-L69","name":"Lean.isGreek","docLink":"./Init/Meta.html#Lean.isGreek","doc":"Valid identifier names "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L65-L65","name":"Lean.Internal.isStage0","docLink":"./Init/Meta.html#Lean.Internal.isStage0","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L53-L62","name":"Lean.toolchain","docLink":"./Init/Meta.html#Lean.toolchain","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L50-L51","name":"Lean.origin","docLink":"./Init/Meta.html#Lean.origin","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L42-L48","name":"Lean.versionString","docLink":"./Init/Meta.html#Lean.versionString","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L39-L40","name":"Lean.versionStringCore","docLink":"./Init/Meta.html#Lean.versionStringCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L37-L37","name":"Lean.version.specialDesc","docLink":"./Init/Meta.html#Lean.version.specialDesc","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L36-L36","name":"Lean.version.getSpecialDesc","docLink":"./Init/Meta.html#Lean.version.getSpecialDesc","doc":"Additional version description like \"nightly-2018-03-11\" "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L32-L32","name":"Lean.version.isRelease","docLink":"./Init/Meta.html#Lean.version.isRelease","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L31-L31","name":"Lean.version.getIsRelease","docLink":"./Init/Meta.html#Lean.version.getIsRelease","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L28-L28","name":"Lean.githash","docLink":"./Init/Meta.html#Lean.githash","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L27-L27","name":"Lean.getGithash","docLink":"./Init/Meta.html#Lean.getGithash","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L24-L24","name":"Lean.version.patch","docLink":"./Init/Meta.html#Lean.version.patch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L20-L20","name":"Lean.version.minor","docLink":"./Init/Meta.html#Lean.version.minor","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Init/Meta.lean#L16-L16","name":"Lean.version.major","docLink":"./Init/Meta.html#Lean.version.major","doc":""}]}