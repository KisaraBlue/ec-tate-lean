{"name":"Init.System.Promise","instances":[{"typeNames":["IO.Promise"],"name":"IO.instNonemptyPromise","className":"Nonempty"}],"imports":["Init.System.IO"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/System/Promise.lean#L55-L57","name":"IO.Promise.result","docLink":"./Init/System/Promise.html#IO.Promise.result","doc":"The result task of a `Promise`.\n\nThe task blocks until `Promise.resolve` is called.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/System/Promise.lean#L44-L44","name":"IO.Promise.resolve","docLink":"./Init/System/Promise.html#IO.Promise.resolve","doc":"Resolves a `Promise`.\n\nOnly the first call to this function has an effect.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/System/Promise.lean#L36-L36","name":"IO.Promise.new","docLink":"./Init/System/Promise.html#IO.Promise.new","doc":"Creates a new `Promise`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/System/Promise.lean#L31-L32","name":"IO.instNonemptyPromise","docLink":"./Init/System/Promise.html#IO.instNonemptyPromise","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/System/Promise.lean#L29-L29","name":"IO.Promise","docLink":"./Init/System/Promise.html#IO.Promise","doc":"`Promise α` allows you to create a `Task α` whose value is provided later by calling `resolve`.\n\nTypical usage is as follows:\n1. `let promise ← Promise.new` creates a promise\n2. `promise.result : Task α` can now be passed around\n3. `promise.result.get` blocks until the promise is resolved\n4. `promise.resolve a` resolves the promise\n5. `promise.result.get` now returns `a`\n\nEvery promise must eventually be resolved.\nOtherwise the memory used for the promise will be leaked,\nand any tasks depending on the promise's result will wait forever.\n"}]}