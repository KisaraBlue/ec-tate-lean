{"name":"Lean.Widget.Basic","instances":[{"typeNames":["Lean.Widget.InfoWithCtx"],"name":"Lean.Widget.instInhabitedInfoWithCtx","className":"Inhabited"},{"typeNames":["Lean.Widget.InfoWithCtx"],"name":"Lean.Widget.instTypeNameInfoWithCtx","className":"TypeName"},{"typeNames":["Lean.MessageData"],"name":"Lean.Widget.instTypeNameMessageData","className":"TypeName"},{"typeNames":["Lean.FVarId"],"name":"Lean.Widget.instToJsonFVarId","className":"Lean.ToJson"},{"typeNames":["Lean.MVarId"],"name":"Lean.Widget.instToJsonMVarId","className":"Lean.ToJson"},{"typeNames":["Lean.FVarId"],"name":"Lean.Widget.instFromJsonFVarId","className":"Lean.FromJson"},{"typeNames":["Lean.MVarId"],"name":"Lean.Widget.instFromJsonMVarId","className":"Lean.FromJson"}],"imports":["Init","Lean.Elab.InfoTree","Lean.Message","Lean.Server.Rpc.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Widget/Basic.lean#L28-L28","name":"Lean.Widget.instFromJsonMVarId","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instFromJsonMVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Widget/Basic.lean#L27-L27","name":"Lean.Widget.instFromJsonFVarId","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instFromJsonFVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Widget/Basic.lean#L26-L26","name":"Lean.Widget.instToJsonMVarId","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instToJsonMVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Widget/Basic.lean#L25-L25","name":"Lean.Widget.instToJsonFVarId","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instToJsonFVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Widget/Basic.lean#L23-L23","name":"Lean.Widget.instTypeNameMessageData","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instTypeNameMessageData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Widget/Basic.lean#L21-L21","name":"Lean.Widget.instTypeNameInfoWithCtx","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instTypeNameInfoWithCtx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Widget/Basic.lean#L21-L21","name":"Lean.Widget.instInhabitedInfoWithCtx","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instInhabitedInfoWithCtx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Widget/Basic.lean#L18-L21","name":"Lean.Widget.InfoWithCtx","docLink":"./Lean/Widget/Basic.html#Lean.Widget.InfoWithCtx","doc":"Elaborator information with elaborator context.\n\nThis is used to tag different parts of expressions in `ppExprTagged`.\nThis is the input to the RPC call `Lean.Widget.InteractiveDiagnostics.infoToInteractive`.\n\nThe purpose of `InfoWithCtx` is to carry over information about delaborated\n`Info` nodes in a `CodeWithInfos`, and the associated pretty-printing\nfunctionality is purpose-specific to showing the contents of infoview popups.\n"}]}