{"name":"Lean.Util.MonadBacktrack","instances":[{"typeNames":["ExceptT"],"name":"Lean.instMonadBacktrackExceptT","className":"Lean.MonadBacktrack"}],"imports":["Init"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Util/MonadBacktrack.lean#L77-L79","name":"Lean.instMonadBacktrackExceptT","docLink":"./Lean/Util/MonadBacktrack.html#Lean.instMonadBacktrackExceptT","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Util/MonadBacktrack.lean#L69-L75","name":"Lean.observing?","docLink":"./Lean/Util/MonadBacktrack.html#Lean.observing?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Util/MonadBacktrack.lean#L62-L67","name":"Lean.withoutModifyingState","docLink":"./Lean/Util/MonadBacktrack.html#Lean.withoutModifyingState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Util/MonadBacktrack.lean#L54-L60","name":"Lean.commitIfNoEx","docLink":"./Lean/Util/MonadBacktrack.html#Lean.commitIfNoEx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Util/MonadBacktrack.lean#L42-L52","name":"Lean.commitWhen","docLink":"./Lean/Util/MonadBacktrack.html#Lean.commitWhen","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Util/MonadBacktrack.lean#L36-L40","name":"Lean.commitWhenSomeNoEx?","docLink":"./Lean/Util/MonadBacktrack.html#Lean.commitWhenSomeNoEx?","doc":"Execute `x?`, but backtrack state if result is `none` or an exception was thrown.\nIf an exception is thrown, `none` is returned.\nThat is, this function is similar to `commitWhenSome?`, but swallows the exception and returns `none`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Util/MonadBacktrack.lean#L19-L29","name":"Lean.commitWhenSome?","docLink":"./Lean/Util/MonadBacktrack.html#Lean.commitWhenSome?","doc":"Execute `x?`, but backtrack state if result is `none` or an exception was thrown.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Util/MonadBacktrack.lean#L10-L12","name":"Lean.MonadBacktrack","docLink":"./Lean/Util/MonadBacktrack.html#Lean.MonadBacktrack","doc":"Similar to `MonadState`, but it retrieves/restores only the \"backtrackable\" part of the state "}]}