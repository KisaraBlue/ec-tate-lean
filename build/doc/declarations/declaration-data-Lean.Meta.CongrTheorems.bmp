{"name":"Lean.Meta.CongrTheorems","instances":[{"typeNames":["Lean.Meta.CongrArgKind"],"name":"Lean.Meta.instInhabitedCongrArgKind","className":"Inhabited"},{"typeNames":["Lean.Meta.CongrArgKind"],"name":"Lean.Meta.instReprCongrArgKind","className":"Repr"}],"imports":["Init","Lean.Meta.AppBuilder"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L290-L293","name":"Lean.Meta.mkCongrSimp?","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimp?","doc":"Create a congruence theorem for `f`. The theorem is used in the simplifier.\n\nIf `subsingletonInstImplicitRhs = true`, the the `rhs` corresponding to `[Decidable p]` parameters\nis marked as instance implicit. It forces the simplifier to compute the new instance when applying\nthe congruence theorem.\nFor the `congr` tactic we set it to `false`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L256-L279","name":"Lean.Meta.mkCongrSimpCore?.mkProof.go","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?.mkProof.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L255-L280","name":"Lean.Meta.mkCongrSimpCore?.mkProof","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?.mkProof","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L223-L250","name":"Lean.Meta.mkCongrSimpCore?.mk?.go","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?.mk?.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L218-L253","name":"Lean.Meta.mkCongrSimpCore?.mk?","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?.mk?","doc":"Create a congruence theorem that is useful for the simplifier.\nIn this kind of theorem, if the i-th argument is a `cast` argument, then the theorem\ncontains an input `a_i` representing the i-th argument in the left-hand-side, and\nit appears with a cast (e.g., `Eq.drec ... a_i ...`) in the right-hand-side.\nThe idea is that the right-hand-side of this theorem \"tells\" the simplifier\nhow the resulting term looks like. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L200-L280","name":"Lean.Meta.mkCongrSimpCore?","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?","doc":"Create a congruence theorem that is useful for the simplifier and `congr` tactic.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L173-L195","name":"Lean.Meta.getCongrSimpKinds","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.getCongrSimpKinds","doc":"Compute `CongrArgKind`s for a simp congruence theorem. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L114-L115","name":"Lean.Meta.mkHCongr","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L93-L112","name":"Lean.Meta.mkHCongrWithArity.mkProof","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongrWithArity.mkProof","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L77-L90","name":"Lean.Meta.mkHCongrWithArity.withNewEqs.loop","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongrWithArity.withNewEqs.loop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L76-L91","name":"Lean.Meta.mkHCongrWithArity.withNewEqs","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongrWithArity.withNewEqs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L54-L112","name":"Lean.Meta.mkHCongrWithArity","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongrWithArity","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L35-L38","name":"Lean.Meta.CongrTheorem","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L33-L33","name":"Lean.Meta.instReprCongrArgKind","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.instReprCongrArgKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L33-L33","name":"Lean.Meta.instInhabitedCongrArgKind","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.instInhabitedCongrArgKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/CongrTheorems.lean#L10-L33","name":"Lean.Meta.CongrArgKind","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrArgKind","doc":""}]}