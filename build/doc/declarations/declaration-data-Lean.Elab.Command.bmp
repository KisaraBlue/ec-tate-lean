{"name":"Lean.Elab.Command","instances":[{"typeNames":["Lean.Elab.Command.Scope"],"name":"Lean.Elab.Command.instInhabitedScope","className":"Inhabited"},{"typeNames":["Lean.Elab.Command.State"],"name":"Lean.Elab.Command.instInhabitedState","className":"Inhabited"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadCommandElabM","className":"Monad"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadInfoTreeCommandElabM","className":"Lean.Elab.MonadInfoTree"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadEnvCommandElabM","className":"Lean.MonadEnv"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadOptionsCommandElabM","className":"Lean.MonadOptions"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instAddMessageContextCommandElabM","className":"Lean.AddMessageContext"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadRefCommandElabM","className":"Lean.MonadRef"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadTraceCommandElabM","className":"Lean.MonadTrace"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instAddErrorMessageContextCommandElabM","className":"Lean.AddErrorMessageContext"},{"typeNames":["IO","Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadLiftTIOCommandElabM","className":"MonadLiftT"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadResolveNameCommandElabM","className":"Lean.MonadResolveName"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadLogCommandElabM","className":"Lean.MonadLog"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadQuotationCommandElabM","className":"Lean.MonadQuotation"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadMacroAdapterCommandElabM","className":"Lean.Elab.MonadMacroAdapter"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadRecDepthCommandElabM","className":"Lean.MonadRecDepth"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instInhabitedCommandElabM","className":"Inhabited"}],"imports":["Init","Lean.Elab.Binders","Lean.Elab.SyntheticMVars"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L487-L494","name":"Lean.Elab.Command.expandDeclId","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.expandDeclId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L479-L485","name":"Lean.Elab.Command.addUnivLevel","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.addUnivLevel","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L476-L477","name":"Lean.Elab.Command.getLevelNames","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getLevelNames","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L466-L474","name":"Lean.Elab.Command.withScope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.withScope","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L459-L464","name":"Lean.Elab.Command.modifyScope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.modifyScope","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L456-L457","name":"Lean.Elab.Command.getScopes","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getScopes","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L450-L451","name":"Lean.Elab.Command.catchExceptions","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.catchExceptions","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L431-L448","name":"Lean.Elab.Command.runTermElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.runTermElabM","doc":"Execute the monadic action `elabFn xs` as a `CommandElabM` monadic action, where `xs` are free variables\ncorresponding to all active scoped variables declared using the `variable` command.\n\nThis method is similar to `liftTermElabM`, but it elaborates all scoped variables declared using the `variable`\ncommand.\n\nExample:\n```\nimport Lean\n\nopen Lean Elab Command Meta\n\nvariable {α : Type u} {f : α → α}\nvariable (n : Nat)\n\n#eval\n  runTermElabM fun xs => do\n    for x in xs do\n      IO.println s!\"{← ppExpr x} : {← ppExpr (← inferType x)}\"\n```\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L385-L407","name":"Lean.Elab.Command.liftTermElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.liftTermElabM","doc":"Lift the `TermElabM` monadic action `x` into a `CommandElabM` monadic action.\n\nNote that `x` is executed with an empty message log. Thus, `x` cannot modify/view messages produced by\nprevious commands.\n\nIf you need to access the free variables corresponding to the ones declared using the `variable` command,\nconsider using `runTermElabM`.\n\nRecall that `TermElabM` actions can automatically lift `MetaM` and `CoreM` actions.\nExample:\n```\nimport Lean\n\nopen Lean Elab Command Meta\n\ndef printExpr (e : Expr) : MetaM Unit := do\n  IO.println s!\"{← ppExpr e} : {← ppExpr (← inferType e)}\"\n\n#eval\n  liftTermElabM do\n    printExpr (mkConst ``Nat)\n```\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L344-L349","name":"Lean.Elab.Command.getBracketedBinderIds","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getBracketedBinderIds","doc":"Return identifier names in the given bracketed binder. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L335-L336","name":"Lean.Elab.Command.instInhabitedCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instInhabitedCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L328-L330","name":"Lean.Elab.Command.adaptExpander","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.adaptExpander","doc":"Adapt a syntax transformation to a regular, command-producing elaborator. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L300-L325","name":"Lean.Elab.Command.elabCommandTopLevel","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.elabCommandTopLevel","doc":"`elabCommand` wrapper that should be used for the initial invocation, not for recursive calls after\nmacro expansion etc.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L269-L292","name":"Lean.Elab.Command.elabCommand","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.elabCommand","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L262-L265","name":"Lean.Elab.Command.showPartialSyntaxErrors","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.showPartialSyntaxErrors","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L257-L260","name":"Lean.Elab.Command.instMonadRecDepthCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadRecDepthCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L252-L255","name":"Lean.Elab.Command.instMonadMacroAdapterCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadMacroAdapterCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L248-L250","name":"Lean.Elab.Command.withMacroExpansion","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.withMacroExpansion","doc":"Elaborate `x` with `stx` on the macro stack "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L228-L228","name":"Lean.Elab.Command.commandElabAttribute","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.commandElabAttribute","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L226-L226","name":"Lean.Elab.Command.mkCommandElabAttribute","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.mkCommandElabAttribute","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L222-L223","name":"Lean.Elab.Command.mkCommandElabAttributeUnsafe","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.mkCommandElabAttributeUnsafe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L217-L220","name":"Lean.Elab.Command.instMonadQuotationCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadQuotationCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L213-L215","name":"Lean.Elab.Command.withFreshMacroScope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.withFreshMacroScope","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L211-L211","name":"Lean.Elab.Command.getMainModule","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getMainModule","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L210-L210","name":"Lean.Elab.Command.getCurrMacroScope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getCurrMacroScope","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L198-L208","name":"Lean.Elab.Command.runLinters","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.runLinters","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L187-L196","name":"Lean.Elab.Command.instMonadLogCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadLogCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L183-L185","name":"Lean.Elab.Command.instMonadResolveNameCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadResolveNameCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L181-L181","name":"Lean.Elab.Command.getScope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getScope","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L178-L179","name":"Lean.Elab.Command.instMonadLiftTIOCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadLiftTIOCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L174-L176","name":"Lean.Elab.Command.liftIO","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.liftIO","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L172-L172","name":"Lean.Elab.Command.liftEIO","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.liftEIO","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L149-L166","name":"Lean.Elab.Command.liftCoreM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.liftCoreM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L110-L113","name":"Lean.Elab.Command.mkMessageAux","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.mkMessageAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L102-L108","name":"Lean.Elab.Command.instAddErrorMessageContextCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instAddErrorMessageContextCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L98-L100","name":"Lean.Elab.Command.instMonadTraceCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadTraceCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L94-L96","name":"Lean.Elab.Command.instMonadRefCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadRefCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L91-L92","name":"Lean.Elab.Command.instAddMessageContextCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instAddMessageContextCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L88-L89","name":"Lean.Elab.Command.getRef","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L85-L86","name":"Lean.Elab.Command.instMonadOptionsCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadOptionsCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L80-L82","name":"Lean.Elab.Command.instMonadEnvCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadEnvCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L76-L78","name":"Lean.Elab.Command.instMonadInfoTreeCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadInfoTreeCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L72-L74","name":"Lean.Elab.Command.addLinter","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.addLinter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L70-L70","name":"Lean.Elab.Command.lintersRef","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.lintersRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L61-L66","name":"Lean.Elab.Command.mkState","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.mkState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L59-L59","name":"Lean.Elab.Command.instMonadCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadCommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L50-L50","name":"Lean.Elab.Command.Linter","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Linter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L49-L49","name":"Lean.Elab.Command.CommandElab","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L48-L48","name":"Lean.Elab.Command.CommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L47-L47","name":"Lean.Elab.Command.CommandElabCoreM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabCoreM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L37-L45","name":"Lean.Elab.Command.Context","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Context","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L35-L35","name":"Lean.Elab.Command.instInhabitedState","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instInhabitedState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L25-L35","name":"Lean.Elab.Command.State","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L23-L23","name":"Lean.Elab.Command.instInhabitedScope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instInhabitedScope","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Command.lean#L11-L23","name":"Lean.Elab.Command.Scope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Scope","doc":""}]}