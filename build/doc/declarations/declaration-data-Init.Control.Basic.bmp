{"name":"Init.Control.Basic","instances":[{"typeNames":[],"name":"instOrElse","className":"OrElse"},{"typeNames":["Bool"],"name":"instToBoolBool","className":"ToBool"},{"typeNames":[],"name":"instMonadControlT","className":"MonadControlT"},{"typeNames":[],"name":"instMonadControlT_1","className":"MonadControlT"}],"imports":["Init.Core"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L254-L254","name":"«term_=<<_»","docLink":"./Init/Control/Basic.html#«term_=<<_»","doc":"Same as `Bind.bind` but with arguments swapped. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L253-L253","name":"«term_<=<_»","docLink":"./Init/Control/Basic.html#«term_<=<_»","doc":"Right-to-left composition of Kleisli arrows. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L252-L252","name":"«term_>=>_»","docLink":"./Init/Control/Basic.html#«term_>=>_»","doc":"Left-to-right composition of Kleisli arrows. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L247-L248","name":"Bind.bindLeft","docLink":"./Init/Control/Basic.html#Bind.bindLeft","doc":"Same as `Bind.bind` but with arguments swapped. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L242-L243","name":"Bind.kleisliLeft","docLink":"./Init/Control/Basic.html#Bind.kleisliLeft","doc":"Right-to-left composition of Kleisli arrows. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L237-L238","name":"Bind.kleisliRight","docLink":"./Init/Control/Basic.html#Bind.kleisliRight","doc":"Left-to-right composition of Kleisli arrows. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L230-L231","name":"ForM","docLink":"./Init/Control/Basic.html#ForM","doc":"Typeclass for the polymorphic `forM` operation described in the \"do unchained\" paper.\nRemark:\n- `γ` is a \"container\" type of elements of type `α`.\n- `α` is treated as an output parameter by the typeclass resolution procedure.\n  That is, it tries to find an instance using only `m` and `γ`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L219-L221","name":"control","docLink":"./Init/Control/Basic.html#control","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L214-L216","name":"controlAt","docLink":"./Init/Control/Basic.html#controlAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L208-L211","name":"instMonadControlT_1","docLink":"./Init/Control/Basic.html#instMonadControlT_1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L203-L206","name":"instMonadControlT","docLink":"./Init/Control/Basic.html#instMonadControlT","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L195-L198","name":"MonadControlT","docLink":"./Init/Control/Basic.html#MonadControlT","doc":"Transitive closure of MonadControl. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L189-L192","name":"MonadControl","docLink":"./Init/Control/Basic.html#MonadControl","doc":"MonadControl is a way of stating that the monad `m` can be 'run inside' the monad `n`.\n\nThis is the same as [`MonadBaseControl`](https://hackage.haskell.org/package/monad-control-1.0.3.1/docs/Control-Monad-Trans-Control.html#t:MonadBaseControl) in Haskell.\nTo learn about `MonadControl`, see the comment above this docstring.\n\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L68-L69","name":"notM","docLink":"./Init/Control/Basic.html#notM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L66-L66","name":"«term_<&&>_»","docLink":"./Init/Control/Basic.html#«term_<&&>_»","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L60-L64","name":"andM","docLink":"./Init/Control/Basic.html#andM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L58-L58","name":"«term_<||>_»","docLink":"./Init/Control/Basic.html#«term_<||>_»","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L52-L56","name":"orM","docLink":"./Init/Control/Basic.html#orM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L47-L50","name":"bool","docLink":"./Init/Control/Basic.html#bool","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L44-L45","name":"instToBoolBool","docLink":"./Init/Control/Basic.html#instToBoolBool","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L39-L40","name":"ToBool","docLink":"./Init/Control/Basic.html#ToBool","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L36-L37","name":"optional","docLink":"./Init/Control/Basic.html#optional","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L33-L34","name":"guard","docLink":"./Init/Control/Basic.html#guard","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L27-L27","name":"instOrElse","docLink":"./Init/Control/Basic.html#instOrElse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L23-L25","name":"Alternative","docLink":"./Init/Control/Basic.html#Alternative","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L18-L19","name":"Functor.discard","docLink":"./Init/Control/Basic.html#Functor.discard","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L15-L15","name":"«term_<&>_»","docLink":"./Init/Control/Basic.html#«term_<&>_»","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Control/Basic.lean#L12-L13","name":"Functor.mapRev","docLink":"./Init/Control/Basic.html#Functor.mapRev","doc":""}]}