{"name":"Lean.Elab.Deriving.Basic","instances":[],"imports":["Init","Lean.Elab.Command"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L130-L131","name":"Lean.Elab.DerivingClassView.applyHandlers","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.DerivingClassView.applyHandlers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L120-L128","name":"Lean.Elab.getOptDerivingClasses","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.getOptDerivingClasses","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L115-L118","name":"Lean.Elab.DerivingClassView","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.DerivingClassView","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L100-L113","name":"Lean.Elab.elabDeriving","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.elabDeriving","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L87-L94","name":"Lean.Elab.applyDerivingHandlers","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.applyDerivingHandlers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L84-L85","name":"Lean.Elab.defaultHandler","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.defaultHandler","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L81-L82","name":"Lean.Elab.registerDerivingHandler","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.registerDerivingHandler","doc":"Like `registerBuiltinDerivingHandlerWithArgs` but ignoring any `with` argument. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L73-L78","name":"Lean.Elab.registerDerivingHandlerWithArgs","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.registerDerivingHandlerWithArgs","doc":"A `DerivingHandler` is called on the fully qualified names of all types it is running for\nas well as the syntax of a `with` argument, if present.\n\nFor example, `deriving instance Foo with fooArgs for Bar, Baz` invokes\n``fooHandler #[`Bar, `Baz] `(fooArgs)``. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L66-L66","name":"Lean.Elab.derivingHandlersRef","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.derivingHandlersRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L64-L64","name":"Lean.Elab.DerivingHandlerNoArgs","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.DerivingHandlerNoArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L63-L63","name":"Lean.Elab.DerivingHandler","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.DerivingHandler","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L41-L59","name":"Lean.Elab.Term.processDefDeriving","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.Term.processDefDeriving","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Elab/Deriving/Basic.lean#L15-L18","name":"Lean.Elab.Term.MkInstResult","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.Term.MkInstResult","doc":"Result for `mkInst?` "}]}