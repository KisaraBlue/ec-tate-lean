{"name":"Lean.Server.CodeActions","instances":[{"typeNames":["Lean.Server.CodeActionResolveData"],"name":"Lean.Server.instToJsonCodeActionResolveData","className":"Lean.ToJson"},{"typeNames":["Lean.Server.CodeActionResolveData"],"name":"Lean.Server.instFromJsonCodeActionResolveData","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.CodeAction"],"name":"Lean.Server.instFileSourceCodeAction","className":"Lean.Lsp.FileSource"},{"typeNames":["Lean.Lsp.CodeAction","Lean.Server.LazyCodeAction"],"name":"Lean.Server.instCoeCodeActionLazyCodeAction","className":"Coe"}],"imports":["Init","Lean.Server.FileWorker.RequestHandling","Lean.Server.InfoUtils"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Server/CodeActions.lean#L125-L141","name":"Lean.Server.handleCodeActionResolve","docLink":"./Lean/Server/CodeActions.html#Lean.Server.handleCodeActionResolve","doc":"Handler for `\"codeAction/resolve\"`.\n\n[reference](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#codeAction_resolve)\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Server/CodeActions.lean#L96-L116","name":"Lean.Server.handleCodeAction","docLink":"./Lean/Server/CodeActions.html#Lean.Server.handleCodeAction","doc":"Handles a `textDocument/codeAction` request.\n\nThis is implemented by calling all of the registered `CodeActionProvider` functions.\n\n[reference](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_codeAction). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Server/CodeActions.lean#L71-L75","name":"Lean.Server.codeActionProviderExt","docLink":"./Lean/Server/CodeActions.html#Lean.Server.codeActionProviderExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Server/CodeActions.lean#L68-L68","name":"Lean.Server.CodeActionProvider","docLink":"./Lean/Server/CodeActions.html#Lean.Server.CodeActionProvider","doc":"A code action provider is a function for providing LSP code actions for an editor.\nYou can register them with the `@[codeActionProvider]` attribute.\n\nThis is a low-level interface for making LSP code actions.\nThis interface can be used to implement the following applications:\n- refactoring code: adding underscores to unused variables,\n- suggesting imports\n- document-level refactoring: removing unused imports, sorting imports, formatting.\n- Helper suggestions for working with type holes (`_`)\n- Helper suggestions for tactics.\n\nWhen implementing your own `CodeActionProvider`, we assume that no long-running computations are allowed.\nIf you need to create a code-action with a long-running computation, you can use the `lazy?` field on `LazyCodeAction`\nto perform the computation after the user has clicked on the code action in their editor.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Server/CodeActions.lean#L50-L51","name":"Lean.Server.instCoeCodeActionLazyCodeAction","docLink":"./Lean/Server/CodeActions.html#Lean.Server.instCoeCodeActionLazyCodeAction","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Server/CodeActions.lean#L46-L47","name":"Lean.Server.instFileSourceCodeAction","docLink":"./Lean/Server/CodeActions.html#Lean.Server.instFileSourceCodeAction","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Server/CodeActions.lean#L36-L44","name":"Lean.Server.CodeAction.getFileSource!","docLink":"./Lean/Server/CodeActions.html#Lean.Server.CodeAction.getFileSource!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Server/CodeActions.lean#L34-L34","name":"Lean.Server.instFromJsonCodeActionResolveData","docLink":"./Lean/Server/CodeActions.html#Lean.Server.instFromJsonCodeActionResolveData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Server/CodeActions.lean#L34-L34","name":"Lean.Server.instToJsonCodeActionResolveData","docLink":"./Lean/Server/CodeActions.html#Lean.Server.instToJsonCodeActionResolveData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Server/CodeActions.lean#L28-L34","name":"Lean.Server.CodeActionResolveData","docLink":"./Lean/Server/CodeActions.html#Lean.Server.CodeActionResolveData","doc":"Passed as the `data?` field of `Lsp.CodeAction` to recover the context of the code action. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Server/CodeActions.lean#L22-L25","name":"Lean.Server.LazyCodeAction","docLink":"./Lean/Server/CodeActions.html#Lean.Server.LazyCodeAction","doc":"A code action optionally supporting a lazy code action computation that is only run when the user clicks on\nthe code action in the editor.\n\nIf you want to use the lazy feature, make sure that the `edit?` field on the `eager` code action result is `none`.\n "}]}