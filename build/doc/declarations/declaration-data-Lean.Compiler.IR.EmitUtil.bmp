{"name":"Lean.Compiler.IR.EmitUtil","instances":[],"imports":["Init","Lean.Compiler.InitAttr","Lean.Compiler.IR.CompilerM"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L81-L82","name":"Lean.IR.mkVarJPMaps","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.mkVarJPMaps","doc":"Return a pair `(v, j)`, where `v` is a mapping from variable/parameter to type,\nand `j` is a mapping from join point to parameters.\nThis function assumes `d` has normalized indexes (see `normids.lean`). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L72-L74","name":"Lean.IR.CollectMaps.collectDecl","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectMaps.collectDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L66-L70","name":"Lean.IR.CollectMaps.collectFnBody","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectMaps.collectFnBody","doc":"`collectFnBody` assumes the variables in "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L62-L63","name":"Lean.IR.CollectMaps.collectJP","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectMaps.collectJP","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L60-L61","name":"Lean.IR.CollectMaps.collectParams","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectMaps.collectParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L58-L59","name":"Lean.IR.CollectMaps.collectVar","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectMaps.collectVar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L57-L57","name":"Lean.IR.CollectMaps.Collector","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectMaps.Collector","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L54-L54","name":"Lean.IR.JPParamsMap","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.JPParamsMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L53-L53","name":"Lean.IR.VarTypeMap","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.VarTypeMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L50-L51","name":"Lean.IR.collectUsedDecls","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.collectUsedDecls","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L44-L46","name":"Lean.IR.CollectUsedDecls.collectDecl","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectUsedDecls.collectDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L38-L42","name":"Lean.IR.CollectUsedDecls.collectInitDecl","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectUsedDecls.collectInitDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L28-L36","name":"Lean.IR.CollectUsedDecls.collectFnBody","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectUsedDecls.collectFnBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L25-L26","name":"Lean.IR.CollectUsedDecls.collect","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectUsedDecls.collect","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L23-L23","name":"Lean.IR.CollectUsedDecls.M","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectUsedDecls.M","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L18-L19","name":"Lean.IR.usesModuleFrom","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.usesModuleFrom","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/IR/EmitUtil.lean#L13-L16","name":"Lean.IR.isTailCallTo","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.isTailCallTo","doc":"Return true iff `b` is of the form `let x := g ys; ret x` "}]}