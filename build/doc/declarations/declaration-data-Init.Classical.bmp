{"name":"Init.Classical","instances":[],"imports":["Init.Core","Init.NotationExtra"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L126-L129","name":"Classical.«tacticBy_cases_:_»","docLink":"./Init/Classical.html#Classical.«tacticBy_cases_:_»","doc":"`by_cases (h :)? p` splits the main goal into two cases, assuming `h : p` in the first branch, and `h : ¬ p` in the second branch.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L123-L124","name":"Classical.byContradiction","docLink":"./Init/Classical.html#Classical.byContradiction","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L119-L120","name":"Classical.byCases","docLink":"./Init/Classical.html#Classical.byCases","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L113-L116","name":"Classical.propComplete","docLink":"./Init/Classical.html#Classical.propComplete","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L110-L111","name":"Classical.skolem","docLink":"./Init/Classical.html#Classical.skolem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L107-L108","name":"Classical.axiomOfChoice","docLink":"./Init/Classical.html#Classical.axiomOfChoice","doc":"the axiom of choice "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L103-L104","name":"Classical.epsilon_singleton","docLink":"./Init/Classical.html#Classical.epsilon_singleton","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L100-L101","name":"Classical.epsilon_spec","docLink":"./Init/Classical.html#Classical.epsilon_spec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L97-L98","name":"Classical.epsilon_spec_aux","docLink":"./Init/Classical.html#Classical.epsilon_spec_aux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L94-L95","name":"Classical.epsilon","docLink":"./Init/Classical.html#Classical.epsilon","doc":"the Hilbert epsilon Function "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L85-L91","name":"Classical.strongIndefiniteDescription","docLink":"./Init/Classical.html#Classical.strongIndefiniteDescription","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L80-L83","name":"Classical.typeDecidable","docLink":"./Init/Classical.html#Classical.typeDecidable","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L77-L78","name":"Classical.typeDecidableEq","docLink":"./Init/Classical.html#Classical.typeDecidableEq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L74-L75","name":"Classical.decidableInhabited","docLink":"./Init/Classical.html#Classical.decidableInhabited","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L69-L72","name":"Classical.propDecidable","docLink":"./Init/Classical.html#Classical.propDecidable","doc":"All propositions are `Decidable`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L65-L66","name":"Classical.inhabited_of_exists","docLink":"./Init/Classical.html#Classical.inhabited_of_exists","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L62-L63","name":"Classical.inhabited_of_nonempty","docLink":"./Init/Classical.html#Classical.inhabited_of_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L59-L60","name":"Classical.exists_true_of_nonempty","docLink":"./Init/Classical.html#Classical.exists_true_of_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L26-L57","name":"Classical.em","docLink":"./Init/Classical.html#Classical.em","doc":"Diaconescu's theorem: excluded middle from choice, Function extensionality and propositional extensionality. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L22-L23","name":"Classical.choose_spec","docLink":"./Init/Classical.html#Classical.choose_spec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L19-L20","name":"Classical.choose","docLink":"./Init/Classical.html#Classical.choose","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Init/Classical.lean#L16-L17","name":"Classical.indefiniteDescription","docLink":"./Init/Classical.html#Classical.indefiniteDescription","doc":""}]}