{"name":"Lean.Parser.Do","instances":[],"imports":["Init","Lean.Parser.Term"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L214-L215","name":"Lean.Parser.Term.termReturn","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termReturn","doc":"`return` used outside of `do` blocks creates an implicit block around it\nand thus is equivalent to `pure e`, but helps with avoiding parentheses.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L208-L209","name":"Lean.Parser.Term.termTry","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termTry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L206-L207","name":"Lean.Parser.Term.termFor","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termFor","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L204-L205","name":"Lean.Parser.Term.termUnless","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termUnless","doc":"`unless e do s` is a nicer way to write `if !e do s`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L195-L196","name":"Lean.Parser.Term.do","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.do","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L192-L193","name":"Lean.Parser.Term.doNested","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doNested","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L188-L191","name":"Lean.Parser.Term.doExpr","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L169-L170","name":"Lean.Parser.Term.doAssert","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doAssert","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L167-L168","name":"Lean.Parser.Term.doDbgTrace","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doDbgTrace","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L165-L166","name":"Lean.Parser.Term.doReturn","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doReturn","doc":"`return e` inside of a `do` block makes the surrounding block evaluate to `pure e`,\nskipping any further statements.\nNote that uses of the `do` keyword in other syntax like in `for _ in _ do`\ndo not constitute a surrounding block in this sense;\nin supported editors, the corresponding `do` keyword of the surrounding block\nis highlighted when hovering over `return`.\n\n`return` not followed by a term starting on the same line is equivalent to `return ()`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L154-L154","name":"Lean.Parser.Term.doContinue","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doContinue","doc":"`continue` skips to the next iteration of the surrounding `for` loop. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L152-L152","name":"Lean.Parser.Term.doBreak","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doBreak","doc":"`break` exits the surrounding `for` loop. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L148-L149","name":"Lean.Parser.Term.doTry","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doTry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L146-L147","name":"Lean.Parser.Term.doFinally","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doFinally","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L144-L145","name":"Lean.Parser.Term.doCatchMatch","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doCatchMatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L142-L143","name":"Lean.Parser.Term.doCatch","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doCatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L138-L140","name":"Lean.Parser.Term.doMatch","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doMatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L137-L137","name":"Lean.Parser.Term.doMatchAlts","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doMatchAlts","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L134-L135","name":"Lean.Parser.Term.doFor","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doFor","doc":"`for x in e do s`  iterates over `e` assuming `e`'s type has an instance of the `ForIn` typeclass.\n`break` and `continue` are supported inside `for` loops.\n`for x in e, x2 in e2, ... do s` iterates of the given collections in parallel,\nuntil at least one of them is exhausted.\nThe types of `e2` etc. must implement the `ToStream` typeclass.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L125-L126","name":"Lean.Parser.Term.doForDecl","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doForDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L123-L124","name":"Lean.Parser.Term.doUnless","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doUnless","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L117-L122","name":"Lean.Parser.Term.doIf","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L114-L116","name":"Lean.Parser.Term.doIfCond","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfCond","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L112-L113","name":"Lean.Parser.Term.doIfProp","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfProp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L110-L111","name":"Lean.Parser.Term.doIfLet","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfLet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L109-L109","name":"Lean.Parser.Term.doIfLetBind","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfLetBind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L108-L108","name":"Lean.Parser.Term.doIfLetPure","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfLetPure","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L106-L106","name":"Lean.Parser.Term.elseIf","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.elseIf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L74-L75","name":"Lean.Parser.Term.doHave","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doHave","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L72-L73","name":"Lean.Parser.Term.doReassignArrow","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doReassignArrow","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L70-L71","name":"Lean.Parser.Term.doReassign","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doReassign","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L67-L68","name":"Lean.Parser.Term.letIdDeclNoBinders","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.letIdDeclNoBinders","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L62-L63","name":"Lean.Parser.Term.doLetArrow","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doLetArrow","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L59-L61","name":"Lean.Parser.Term.doPatDecl","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doPatDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L56-L58","name":"Lean.Parser.Term.doIdDecl","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIdDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L54-L55","name":"Lean.Parser.Term.doLetRec","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doLetRec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L50-L52","name":"Lean.Parser.Term.doLetElse","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doLetElse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L48-L49","name":"Lean.Parser.Term.doLet","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doLet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L39-L46","name":"Lean.Parser.Term.notFollowedByRedefinedTermToken","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.notFollowedByRedefinedTermToken","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L31-L31","name":"Lean.Parser.Term.termBeforeDo","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termBeforeDo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L28-L30","name":"Lean.Parser.Term.doSeq","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doSeq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L26-L27","name":"Lean.Parser.Term.doSeqBracketed","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doSeqBracketed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L24-L25","name":"Lean.Parser.Term.doSeqIndent","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doSeqIndent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L22-L23","name":"Lean.Parser.Term.doSeqItem","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doSeqItem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L19-L20","name":"Lean.Parser.Term.liftMethod","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.liftMethod","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L18-L18","name":"Lean.Parser.Term.leftArrow","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.leftArrow","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Do.lean#L14-L15","name":"Lean.Parser.doElemParser","docLink":"./Lean/Parser/Do.html#Lean.Parser.doElemParser","doc":""}]}