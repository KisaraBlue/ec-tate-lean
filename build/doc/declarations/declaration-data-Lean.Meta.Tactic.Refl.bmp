{"name":"Lean.Meta.Tactic.Refl","instances":[],"imports":["Init","Lean.Meta.Reduce","Lean.Meta.Tactic.Util","Lean.Meta.Tactic.Apply"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Refl.lean#L66-L69","name":"Lean.MVarId.hrefl","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.hrefl","doc":"Close given goal using `HEq.refl`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Refl.lean#L58-L61","name":"Lean.MVarId.eqOfHEq","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.eqOfHEq","doc":"Try to apply `eq_of_heq`. If successful, then return new goal, otherwise return `mvarId`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Refl.lean#L50-L53","name":"Lean.MVarId.heqOfEq","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.heqOfEq","doc":"Try to apply `heq_of_eq`. If successful, then return new goal, otherwise return `mvarId`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Refl.lean#L44-L45","name":"Lean.MVarId.applyRefl","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.applyRefl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Refl.lean#L40-L41","name":"Lean.Meta.refl","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.Meta.refl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Refl.lean#L21-L37","name":"Lean.MVarId.refl","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.refl","doc":"Close given goal using `Eq.refl`.\n"}]}