{"name":"Lean.Meta.ACLt","instances":[],"imports":["Init","Lean.Meta.Basic","Lean.Meta.FunInfo"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/ACLt.lean#L158-L158","name":"Lean.Meta.Expr.acLt","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.Expr.acLt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/ACLt.lean#L136-L151","name":"Lean.Meta.ACLt.lt.lpo","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt.lpo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/ACLt.lean#L133-L134","name":"Lean.Meta.ACLt.lt.someChildGe","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt.someChildGe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/ACLt.lean#L113-L131","name":"Lean.Meta.ACLt.lt.allChildrenLt","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt.allChildrenLt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/ACLt.lean#L95-L111","name":"Lean.Meta.ACLt.lt.lexSameCtor","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt.lexSameCtor","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/ACLt.lean#L65-L93","name":"Lean.Meta.ACLt.lt.ltApp","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt.ltApp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/ACLt.lean#L57-L63","name":"Lean.Meta.ACLt.lt.ltPair","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt.ltPair","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/ACLt.lean#L46-L151","name":"Lean.Meta.ACLt.lt","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt","doc":"An AC-compatible ordering.\n\nRecall that an AC-compatible ordering if it is monotonic, well-founded, and total.\nBoth KBO and LPO are AC-compatible. KBO is faster, but we do not cache the weight of\neach expression in Lean 4. Even if we did, we would need to have a weight where implicit instace arguments are ignored.\nSo, we use a LPO-like term ordering.\n\nRemark: this method is used to implement ordered rewriting. We ignore implicit instance\narguments to address an issue reported at issue #972.\n\nRemark: the order is not really total on terms since\n - We instance implicit arguments.\n - We ignore metadata.\n - We ignore universe parameterst at constants.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/ACLt.lean#L11-L23","name":"Lean.Expr.ctorWeight","docLink":"./Lean/Meta/ACLt.html#Lean.Expr.ctorWeight","doc":""}]}