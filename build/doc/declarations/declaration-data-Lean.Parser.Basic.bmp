{"name":"Lean.Parser.Basic","instances":[{"typeNames":["Lean.Parser.InputContext"],"name":"Lean.Parser.instInhabitedInputContext","className":"Inhabited"},{"typeNames":["Lean.Parser.Error"],"name":"Lean.Parser.instInhabitedError","className":"Inhabited"},{"typeNames":["Lean.Parser.Error"],"name":"Lean.Parser.instBEqError","className":"BEq"},{"typeNames":["Lean.Parser.Error"],"name":"Lean.Parser.Error.instToStringError","className":"ToString"},{"typeNames":["Lean.Parser.ParserFn"],"name":"Lean.Parser.instInhabitedParserFn","className":"Inhabited"},{"typeNames":["Lean.Parser.FirstTokens"],"name":"Lean.Parser.instInhabitedFirstTokens","className":"Inhabited"},{"typeNames":["Lean.Parser.FirstTokens"],"name":"Lean.Parser.FirstTokens.instToStringFirstTokens","className":"ToString"},{"typeNames":["Lean.Parser.ParserInfo"],"name":"Lean.Parser.instInhabitedParserInfo","className":"Inhabited"},{"typeNames":["Lean.Parser.Parser"],"name":"Lean.Parser.instInhabitedParser","className":"Inhabited"},{"typeNames":["Lean.Parser.Parser"],"name":"Lean.Parser.instAndThenParser","className":"AndThen"},{"typeNames":["Lean.Parser.OrElseOnAntiquotBehavior"],"name":"Lean.Parser.instBEqOrElseOnAntiquotBehavior","className":"BEq"},{"typeNames":["Lean.Parser.Parser"],"name":"Lean.Parser.instOrElseParser","className":"OrElse"},{"typeNames":["Lean.Parser.TokenMap"],"name":"Lean.Parser.TokenMap.instInhabitedTokenMap","className":"Inhabited"},{"typeNames":["Lean.Parser.TokenMap"],"name":"Lean.Parser.TokenMap.instEmptyCollectionTokenMap","className":"EmptyCollection"},{"typeNames":["Lean.Parser.TokenMap","Prod","Lean.Name","List"],"name":"Lean.Parser.TokenMap.instForInTokenMapProdNameList","className":"ForIn"},{"typeNames":["Lean.Parser.PrattParsingTables"],"name":"Lean.Parser.instInhabitedPrattParsingTables","className":"Inhabited"},{"typeNames":["Lean.Parser.LeadingIdentBehavior"],"name":"Lean.Parser.instInhabitedLeadingIdentBehavior","className":"Inhabited"},{"typeNames":["Lean.Parser.LeadingIdentBehavior"],"name":"Lean.Parser.instBEqLeadingIdentBehavior","className":"BEq"},{"typeNames":["Lean.Parser.LeadingIdentBehavior"],"name":"Lean.Parser.instReprLeadingIdentBehavior","className":"Repr"},{"typeNames":["Lean.Parser.ParserCategory"],"name":"Lean.Parser.instInhabitedParserCategory","className":"Inhabited"},{"typeNames":["String","Lean.Parser.Parser"],"name":"Lean.Parser.instCoeStringParser","className":"Coe"}],"imports":["Init","Lean.Data.Trie","Lean.Syntax","Lean.Message"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1952-L1953","name":"Lean.Syntax.forArgsM","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.forArgsM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1949-L1950","name":"Lean.Syntax.foldArgs","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.foldArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1946-L1947","name":"Lean.Syntax.foldArgsM","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.foldArgsM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1934-L1937","name":"Lean.Parser.skip","docLink":"./Lean/Parser/Basic.html#Lean.Parser.skip","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1928-L1932","name":"Lean.Parser.fieldIdx","docLink":"./Lean/Parser/Basic.html#Lean.Parser.fieldIdx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1918-L1926","name":"Lean.Parser.fieldIdxFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.fieldIdxFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1911-L1916","name":"Lean.Parser.prattParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.prattParser","doc":"Implements a variant of Pratt's algorithm. In Pratt's algorithms tokens have a right and left binding power.\nIn our implementation, parsers have precedence instead. This method selects a parser (or more, via\n`longestMatchFn`) from `leadingTable` based on the current token. Note that the unindexed `leadingParsers` parsers\nare also tried. We have the unidexed `leadingParsers` because some parsers do not have a \"first token\". Example:\n```\nsyntax term:51 \"â‰¤\" ident \"<\" term \"|\" term : index\n```\nExample, in principle, the set of first tokens for this parser is any token that can start a term, but this set\nis always changing. Thus, this parsing rule is stored as an unindexed leading parser at `leadingParsers`.\nAfter processing the leading parser, we chain with parsers from `trailingTable`/`trailingParsers` that have precedence\nat least `c.prec` where `c` is the `ParsingContext`. Recall that `c.prec` is set by `categoryParser`.\n\nNote that in the original Pratt's algorith, precedences are only checked before calling trailing parsers. In our\nimplementation, leading *and* trailing parsers check the precendece. We claim our algorithm is more flexible,\nmodular and easier to understand.\n\n`antiquotParser` should be a `mkAntiquot` parser (or always fail) and is tried before all other parsers.\nIt should not be added to the regular leading parsers because it would heavily\noverlap with antiquotation parsers nested inside them. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1870-L1888","name":"Lean.Parser.trailingLoop","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingLoop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1867-L1868","name":"Lean.Parser.trailingLoopStep","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingLoopStep","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1864-L1865","name":"Lean.Parser.leadingParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1853-L1862","name":"Lean.Parser.leadingParserAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingParserAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1846-L1847","name":"Lean.Parser.categoryParserOfStack","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserOfStack","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1837-L1844","name":"Lean.Parser.categoryParserOfStackFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserOfStackFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1834-L1835","name":"Lean.Parser.sepBy1","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1831-L1832","name":"Lean.Parser.sepBy","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1828-L1829","name":"Lean.Parser.sepByElemParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByElemParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1821-L1822","name":"Lean.Parser.nodeWithAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeWithAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1817-L1819","name":"Lean.Parser.withAntiquotSpliceAndSuffix","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotSpliceAndSuffix","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1807-L1815","name":"Lean.Parser.withAntiquotSuffixSplice","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotSuffixSplice","doc":"Parse `suffix` after an antiquotation, e.g. `$x,*`, and put both into a new node. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1790-L1796","name":"Lean.Parser.mkAntiquotSplice","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAntiquotSplice","doc":"Parse `$[p]suffix`, e.g. `$[p],*`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1786-L1787","name":"Lean.Parser.withoutInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1781-L1784","name":"Lean.Parser.withAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquot","doc":"Optimized version of `mkAntiquot ... <|> p`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1769-L1778","name":"Lean.Parser.withAntiquotFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1756-L1767","name":"Lean.Parser.mkAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAntiquot","doc":"Define parser for `$e` (if anonymous == true) and `$e:name`.\n`kind` is embedded in the antiquotation's kind, and checked at syntax `match` unless `isPseudoKind` is false.\nAntiquotations can be escaped as in `$$e`, which produces the syntax tree for `$e`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1749-L1750","name":"Lean.Parser.unicodeSymbol","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbol","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1746-L1747","name":"Lean.Parser.nonReservedSymbol","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbol","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1744-L1744","name":"Lean.Parser.instCoeStringParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instCoeStringParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1741-L1742","name":"Lean.Parser.symbol","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbol","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1731-L1739","name":"Lean.Parser.tokenWithAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenWithAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1721-L1729","name":"Lean.Parser.tokenAntiquotFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenAntiquotFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1719-L1719","name":"Lean.Parser.antiquotExpr","docLink":"./Lean/Parser/Basic.html#Lean.Parser.antiquotExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1718-L1718","name":"Lean.Parser.antiquotNestedExpr","docLink":"./Lean/Parser/Basic.html#Lean.Parser.antiquotNestedExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1714-L1715","name":"Lean.Parser.pushNone","docLink":"./Lean/Parser/Basic.html#Lean.Parser.pushNone","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1711-L1712","name":"Lean.Parser.setExpected","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setExpected","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1706-L1709","name":"Lean.Parser.setExpectedFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setExpectedFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1691-L1704","name":"Lean.Parser.checkNoImmediateColon","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoImmediateColon","doc":"Fail if previous token is immediately followed by ':'. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1683-L1684","name":"Lean.Parser.termParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.termParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1678-L1680","name":"Lean.Parser.categoryParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1675-L1676","name":"Lean.Parser.categoryParserFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1673-L1673","name":"Lean.Parser.categoryParserFnExtension","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFnExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1671-L1671","name":"Lean.Parser.categoryParserFnRef","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFnRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1669-L1669","name":"Lean.Parser.CategoryParserFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.CategoryParserFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1640-L1667","name":"Lean.Parser.indexed","docLink":"./Lean/Parser/Basic.html#Lean.Parser.indexed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1638-L1638","name":"Lean.Parser.ParserCategories","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1636-L1636","name":"Lean.Parser.instInhabitedParserCategory","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParserCategory","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1618-L1636","name":"Lean.Parser.ParserCategory","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory","doc":"Each parser category is implemented using a Pratt's parser.\nThe system comes equipped with the following categories: `level`, `term`, `tactic`, and `command`.\nUsers and plugins may define extra categories.\n\nThe method\n```\ncategoryParser `term prec\n```\nexecutes the Pratt's parser for category `term` with precedence `prec`.\nThat is, only parsers with precedence at least `prec` are considered.\nThe method `termParser prec` is equivalent to the method above.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1603-L1603","name":"Lean.Parser.instReprLeadingIdentBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instReprLeadingIdentBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1603-L1603","name":"Lean.Parser.instBEqLeadingIdentBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqLeadingIdentBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1603-L1603","name":"Lean.Parser.instInhabitedLeadingIdentBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedLeadingIdentBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1588-L1603","name":"Lean.Parser.LeadingIdentBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior","doc":"The type `LeadingIdentBehavior` specifies how the parsing table\nlookup function behaves for identifiers.  The function `prattParser`\nuses two tables `leadingTable` and `trailingTable`. They map tokens\nto parsers.\n\nWe use `LeadingIdentBehavior.symbol` and `LeadingIdentBehavior.both`\nand `nonReservedSymbol` parser to implement the `tactic` parsers.\nThe idea is to avoid creating a reserved symbol for each\nbuiltin tactic (e.g., `apply`, `assumption`, etc.).  That is, users\nmay still use these symbols as identifiers (e.g., naming a\nfunction).\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1573-L1573","name":"Lean.Parser.instInhabitedPrattParsingTables","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedPrattParsingTables","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1567-L1571","name":"Lean.Parser.PrattParsingTables","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1563-L1563","name":"Lean.Parser.TokenMap.instForInTokenMapProdNameList","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instForInTokenMapProdNameList","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1561-L1561","name":"Lean.Parser.TokenMap.instEmptyCollectionTokenMap","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instEmptyCollectionTokenMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1559-L1559","name":"Lean.Parser.TokenMap.instInhabitedTokenMap","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instInhabitedTokenMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1554-L1557","name":"Lean.Parser.TokenMap.insert","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.insert","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1550-L1550","name":"Lean.Parser.TokenMap","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap","doc":"A multimap indexed by tokens. Used for indexing parsers by their leading token. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1546-L1547","name":"Lean.Parser.eoi","docLink":"./Lean/Parser/Basic.html#Lean.Parser.eoi","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1541-L1544","name":"Lean.Parser.eoiFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.eoiFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1536-L1539","name":"Lean.Parser.withoutForbidden","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutForbidden","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1531-L1534","name":"Lean.Parser.withForbidden","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withForbidden","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1526-L1529","name":"Lean.Parser.withoutPosition","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutPosition","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1518-L1524","name":"Lean.Parser.withPositionAfterLinebreak","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withPositionAfterLinebreak","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1512-L1516","name":"Lean.Parser.withPosition","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withPosition","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1509-L1510","name":"Lean.Parser.checkLineEq","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLineEq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1500-L1507","name":"Lean.Parser.checkLineEqFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLineEqFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1497-L1498","name":"Lean.Parser.checkColGt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1488-L1495","name":"Lean.Parser.checkColGtFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGtFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1485-L1486","name":"Lean.Parser.checkColGe","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1476-L1483","name":"Lean.Parser.checkColGeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1473-L1474","name":"Lean.Parser.checkColEq","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColEq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1464-L1471","name":"Lean.Parser.checkColEqFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColEqFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1459-L1462","name":"Lean.Parser.anyOfFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.anyOfFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1449-L1457","name":"Lean.Parser.longestMatchFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1441-L1446","name":"Lean.Parser.longestMatchFnAux.parse","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFnAux.parse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1440-L1447","name":"Lean.Parser.longestMatchFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1437-L1438","name":"Lean.Parser.longestMatchMkResult","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchMkResult","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1416-L1435","name":"Lean.Parser.longestMatchStep","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchStep","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1390-L1414","name":"Lean.Parser.runLongestMatchParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.runLongestMatchParser","doc":"Auxiliary function used to execute parsers provided to `longestMatchFn`.\nPush `left?` into the stack if it is not `none`, and execute `p`.\n\nRemark: `p` must produce exactly one syntax node.\nRemark: the `left?` is not none when we are processing trailing parsers. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1381-L1382","name":"Lean.Parser.invalidLongestMatchParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.invalidLongestMatchParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1376-L1377","name":"Lean.Parser.ParserState.replaceLongest","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.replaceLongest","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1372-L1374","name":"Lean.Parser.ParserState.keepLatest","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepLatest","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1365-L1370","name":"Lean.Parser.ParserState.mergeErrors","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mergeErrors","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1361-L1363","name":"Lean.Parser.ParserState.keepPrevError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepPrevError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1357-L1359","name":"Lean.Parser.ParserState.keepNewError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepNewError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1353-L1355","name":"Lean.Parser.ParserState.keepTop","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepTop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1346-L1349","name":"Lean.Parser.identEq","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identEq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1336-L1344","name":"Lean.Parser.identEqFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identEqFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1332-L1334","name":"Lean.Parser.rawIdentNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawIdentNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1327-L1330","name":"Lean.Parser.identNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1321-L1325","name":"Lean.Parser.identFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1316-L1319","name":"Lean.Parser.nameLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nameLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1310-L1314","name":"Lean.Parser.nameLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nameLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1305-L1308","name":"Lean.Parser.charLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1299-L1303","name":"Lean.Parser.charLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1294-L1297","name":"Lean.Parser.strLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1288-L1292","name":"Lean.Parser.strLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1283-L1286","name":"Lean.Parser.scientificLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.scientificLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1276-L1281","name":"Lean.Parser.scientificLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.scientificLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1271-L1274","name":"Lean.Parser.numLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1264-L1269","name":"Lean.Parser.numLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1261-L1262","name":"Lean.Parser.mkAtomicInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAtomicInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1255-L1259","name":"Lean.Parser.unicodeSymbolNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1252-L1253","name":"Lean.Parser.unicodeSymbolFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1247-L1250","name":"Lean.Parser.unicodeSymbolInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1244-L1245","name":"Lean.Parser.unicodeSymbolFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1239-L1242","name":"Lean.Parser.checkNoWsBefore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoWsBefore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1235-L1237","name":"Lean.Parser.checkNoWsBeforeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoWsBeforeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1225-L1228","name":"Lean.Parser.checkLinebreakBefore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLinebreakBefore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1221-L1223","name":"Lean.Parser.checkLinebreakBeforeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLinebreakBeforeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1216-L1219","name":"Lean.Parser.checkTailLinebreak","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailLinebreak","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1211-L1214","name":"Lean.Parser.checkWsBefore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkWsBefore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1207-L1209","name":"Lean.Parser.checkWsBeforeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkWsBeforeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1202-L1205","name":"Lean.Parser.checkTailWs","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailWs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1193-L1199","name":"Lean.Parser.strAux.parse","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strAux.parse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1192-L1200","name":"Lean.Parser.strAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1187-L1190","name":"Lean.Parser.nonReservedSymbolNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1179-L1185","name":"Lean.Parser.nonReservedSymbolInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1176-L1177","name":"Lean.Parser.nonReservedSymbolFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1159-L1174","name":"Lean.Parser.nonReservedSymbolFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolFnAux","doc":"Check if the following token is the symbol _or_ identifier `sym`. Useful for\nparsing local tokens that have not been added to the token table (but may have\nbeen so by some unrelated code).\n\nFor example, the universe `max` Function is parsed using this combinator so that\nit can still be used as an identifier outside of universe (but registering it\nas a token in a Term Syntax would not break the universe Parser). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1147-L1150","name":"Lean.Parser.checkTailNoWs","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailNoWs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1142-L1145","name":"Lean.Parser.symbolNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1139-L1140","name":"Lean.Parser.symbolFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1134-L1137","name":"Lean.Parser.symbolInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1131-L1132","name":"Lean.Parser.symbolFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1120-L1129","name":"Lean.Parser.satisfySymbolFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.satisfySymbolFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1114-L1118","name":"Lean.Parser.rawIdentFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawIdentFn","doc":"Treat keywords as identifiers. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1106-L1111","name":"Lean.Parser.peekToken","docLink":"./Lean/Parser/Basic.html#Lean.Parser.peekToken","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1097-L1104","name":"Lean.Parser.peekTokenAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.peekTokenAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1084-L1095","name":"Lean.Parser.tokenFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1009-L1039","name":"Lean.Parser.identFnAux.parse","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFnAux.parse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L1008-L1040","name":"Lean.Parser.identFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L993-L1006","name":"Lean.Parser.mkIdResult","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkIdResult","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L976-L991","name":"Lean.Parser.mkTokenAndFixPos","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkTokenAndFixPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L954-L965","name":"Lean.Parser.isIdCont","docLink":"./Lean/Parser/Basic.html#Lean.Parser.isIdCont","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L932-L952","name":"Lean.Parser.numberFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numberFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L928-L930","name":"Lean.Parser.hexNumberFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.hexNumberFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L924-L926","name":"Lean.Parser.octalNumberFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.octalNumberFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L920-L922","name":"Lean.Parser.binNumberFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.binNumberFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L905-L918","name":"Lean.Parser.decimalNumberFn.parseOptExp","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn.parseOptExp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L891-L903","name":"Lean.Parser.decimalNumberFn.parseOptDot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn.parseOptDot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L879-L918","name":"Lean.Parser.decimalNumberFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L867-L877","name":"Lean.Parser.strLitFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L851-L865","name":"Lean.Parser.charLitFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L840-L849","name":"Lean.Parser.mkNodeToken","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkNodeToken","doc":"Push `(Syntax.node tk <new-atom>)` into syntax stack "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L836-L837","name":"Lean.Parser.quotedCharFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.quotedCharFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L833-L834","name":"Lean.Parser.isQuotableCharDefault","docLink":"./Lean/Parser/Basic.html#Lean.Parser.isQuotableCharDefault","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L818-L831","name":"Lean.Parser.quotedCharCoreFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.quotedCharCoreFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L808-L816","name":"Lean.Parser.hexDigitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.hexDigitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L805-L806","name":"Lean.Parser.rawCh","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawCh","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L802-L803","name":"Lean.Parser.chFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.chFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L797-L800","name":"Lean.Parser.rawFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawFn","doc":"Match an arbitrary Parser and return the consumed String in a `Syntax.atom`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L777-L778","name":"Lean.Parser.mkEmptySubstringAt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkEmptySubstringAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L752-L775","name":"Lean.Parser.whitespace","docLink":"./Lean/Parser/Basic.html#Lean.Parser.whitespace","doc":"Consume whitespace and comments "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L749-L749","name":"Lean.Parser.finishCommentBlock.eoi","docLink":"./Lean/Parser/Basic.html#Lean.Parser.finishCommentBlock.eoi","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L725-L749","name":"Lean.Parser.finishCommentBlock","docLink":"./Lean/Parser/Basic.html#Lean.Parser.finishCommentBlock","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L722-L723","name":"Lean.Parser.takeWhile1Fn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeWhile1Fn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L719-L720","name":"Lean.Parser.takeWhileFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeWhileFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L713-L717","name":"Lean.Parser.takeUntilFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeUntilFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L707-L711","name":"Lean.Parser.satisfyFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.satisfyFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L704-L705","name":"Lean.Parser.many1Unbox","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1Unbox","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L699-L702","name":"Lean.Parser.withResultOf","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L694-L697","name":"Lean.Parser.withResultOfInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOfInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L687-L692","name":"Lean.Parser.withResultOfFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOfFn","doc":"Apply `f` to the syntax object produced by `p` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L681-L684","name":"Lean.Parser.sepBy1NoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1NoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L676-L679","name":"Lean.Parser.sepByNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L670-L674","name":"Lean.Parser.sepBy1Info","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1Info","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L665-L668","name":"Lean.Parser.sepByInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L661-L663","name":"Lean.Parser.sepBy1Fn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1Fn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L657-L659","name":"Lean.Parser.sepByFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L624-L627","name":"Lean.Parser.many1NoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1NoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L619-L622","name":"Lean.Parser.many1Fn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1Fn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L614-L617","name":"Lean.Parser.manyNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L609-L612","name":"Lean.Parser.manyFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L597-L607","name":"Lean.Parser.manyAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L593-L595","name":"Lean.Parser.notFollowedBy","docLink":"./Lean/Parser/Basic.html#Lean.Parser.notFollowedBy","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L583-L591","name":"Lean.Parser.notFollowedByFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.notFollowedByFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L578-L581","name":"Lean.Parser.lookahead","docLink":"./Lean/Parser/Basic.html#Lean.Parser.lookahead","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L572-L576","name":"Lean.Parser.lookaheadFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.lookaheadFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L567-L570","name":"Lean.Parser.optionalNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionalNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L561-L565","name":"Lean.Parser.optionaInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionaInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L554-L559","name":"Lean.Parser.optionalFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionalFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L549-L552","name":"Lean.Parser.atomic","docLink":"./Lean/Parser/Basic.html#Lean.Parser.atomic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L543-L547","name":"Lean.Parser.atomicFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.atomicFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L538-L541","name":"Lean.Parser.noFirstTokenInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.noFirstTokenInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L535-L536","name":"Lean.Parser.instOrElseParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instOrElseParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L530-L533","name":"Lean.Parser.orelse","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelse","doc":"Run `p`, falling back to `q` if `p` failed without consuming any input.\n\nNOTE: In order for the pretty printer to retrace an `orelse`, `p` must be a call to `node` or some other parser\nproducing a single node kind. Nested `orelse` calls are flattened for this, i.e. `(node k1 p1 <|> node k2 p2) <|> ...`\nis fine as well. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L518-L522","name":"Lean.Parser.orelseInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L515-L516","name":"Lean.Parser.orelseFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L486-L513","name":"Lean.Parser.orelseFnCore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseFnCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L484-L484","name":"Lean.Parser.instBEqOrElseOnAntiquotBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqOrElseOnAntiquotBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L480-L484","name":"Lean.Parser.OrElseOnAntiquotBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L472-L477","name":"Lean.Parser.mergeOrElseErrors","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mergeOrElseErrors","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L469-L470","name":"Lean.Parser.trailingNode","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L464-L467","name":"Lean.Parser.trailingNodeAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNodeAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L461-L462","name":"Lean.Parser.leadingNode","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L456-L459","name":"Lean.Parser.suppressInsideQuot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.suppressInsideQuot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L453-L454","name":"Lean.Parser.suppressInsideQuotFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.suppressInsideQuotFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L448-L451","name":"Lean.Parser.decQuotDepth","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decQuotDepth","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L443-L446","name":"Lean.Parser.incQuotDepth","docLink":"./Lean/Parser/Basic.html#Lean.Parser.incQuotDepth","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L435-L438","name":"Lean.Parser.setLhsPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setLhsPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L431-L433","name":"Lean.Parser.setLhsPrecFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setLhsPrecFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L426-L429","name":"Lean.Parser.checkLhsPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLhsPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L422-L424","name":"Lean.Parser.checkLhsPrecFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLhsPrecFn","doc":"Succeeds if `c.lhsPrec >= prec` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L416-L419","name":"Lean.Parser.checkPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L412-L414","name":"Lean.Parser.checkPrecFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkPrecFn","doc":"Succeeds if `c.prec <= prec` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L407-L409","name":"Lean.Parser.errorAtSavedPos","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorAtSavedPos","doc":"Generate an error at the position saved with the `withPosition` combinator.\nIf `delta == true`, then it reports at saved position+1.\nThis useful to make sure a parser consumed at least one character.  "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L396-L402","name":"Lean.Parser.errorAtSavedPosFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorAtSavedPosFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L391-L394","name":"Lean.Parser.error","docLink":"./Lean/Parser/Basic.html#Lean.Parser.error","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L388-L389","name":"Lean.Parser.errorFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L383-L386","name":"Lean.Parser.node","docLink":"./Lean/Parser/Basic.html#Lean.Parser.node","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L377-L381","name":"Lean.Parser.nodeInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L372-L375","name":"Lean.Parser.trailingNodeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNodeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L367-L370","name":"Lean.Parser.nodeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L364-L365","name":"Lean.Parser.instAndThenParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instAndThenParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L359-L362","name":"Lean.Parser.andthen","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthen","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L353-L357","name":"Lean.Parser.andthenInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthenInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L349-L351","name":"Lean.Parser.andthenFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthenFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L344-L347","name":"Lean.Parser.checkStackTop","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkStackTop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L340-L342","name":"Lean.Parser.checkStackTopFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkStackTopFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L337-L338","name":"Lean.Parser.epsilonInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.epsilonInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L333-L335","name":"Lean.Parser.dbgTraceState","docLink":"./Lean/Parser/Basic.html#Lean.Parser.dbgTraceState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L323-L331","name":"Lean.Parser.dbgTraceStateFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.dbgTraceStateFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L321-L321","name":"Lean.Parser.TrailingParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TrailingParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L319-L319","name":"Lean.Parser.instInhabitedParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L316-L319","name":"Lean.Parser.Parser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Parser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L314-L314","name":"Lean.Parser.instInhabitedParserInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParserInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L310-L314","name":"Lean.Parser.ParserInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L306-L306","name":"Lean.Parser.FirstTokens.instToStringFirstTokens","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.instToStringFirstTokens","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L300-L304","name":"Lean.Parser.FirstTokens.toStr","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.toStr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L291-L298","name":"Lean.Parser.FirstTokens.merge","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.merge","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L287-L289","name":"Lean.Parser.FirstTokens.toOptional","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.toOptional","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L281-L285","name":"Lean.Parser.FirstTokens.seq","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.seq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L277-L277","name":"Lean.Parser.instInhabitedFirstTokens","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedFirstTokens","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L272-L277","name":"Lean.Parser.FirstTokens","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L269-L270","name":"Lean.Parser.instInhabitedParserFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParserFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L267-L267","name":"Lean.Parser.ParserFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L261-L263","name":"Lean.Parser.ParserState.mkUnexpectedErrorAt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkUnexpectedErrorAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L256-L259","name":"Lean.Parser.ParserState.mkErrorsAt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkErrorsAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L251-L254","name":"Lean.Parser.ParserState.mkErrorAt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkErrorAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L248-L249","name":"Lean.Parser.ParserState.mkEOIError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkEOIError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L244-L246","name":"Lean.Parser.ParserState.mkUnexpectedError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkUnexpectedError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L240-L242","name":"Lean.Parser.ParserState.mkError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L236-L238","name":"Lean.Parser.ParserState.setError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.setError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L228-L234","name":"Lean.Parser.ParserState.mkTrailingNode","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkTrailingNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L209-L226","name":"Lean.Parser.ParserState.mkNode","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L202-L207","name":"Lean.Parser.ParserState.toErrorMsg","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.toErrorMsg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L199-L200","name":"Lean.Parser.ParserState.next","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.next","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L196-L197","name":"Lean.Parser.ParserState.shrinkStack","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.shrinkStack","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L193-L194","name":"Lean.Parser.ParserState.popSyntax","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.popSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L190-L191","name":"Lean.Parser.ParserState.pushSyntax","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.pushSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L187-L188","name":"Lean.Parser.ParserState.setCache","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.setCache","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L184-L185","name":"Lean.Parser.ParserState.setPos","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.setPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L181-L182","name":"Lean.Parser.ParserState.restore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.restore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L178-L179","name":"Lean.Parser.ParserState.stackSize","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.stackSize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L175-L176","name":"Lean.Parser.ParserState.hasError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.hasError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L161-L171","name":"Lean.Parser.ParserState","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L155-L157","name":"Lean.Parser.Error.merge","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Error.merge","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L153-L153","name":"Lean.Parser.Error.instToStringError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Error.instToStringError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L145-L151","name":"Lean.Parser.Error.toString","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Error.toString","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L135-L135","name":"Lean.Parser.instBEqError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L135-L135","name":"Lean.Parser.instInhabitedError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L132-L135","name":"Lean.Parser.Error","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Error","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L123-L130","name":"Lean.Parser.ParserContext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserContext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L116-L121","name":"Lean.Parser.ParserModuleContext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserModuleContext","doc":"Input context derived from elaboration of previous commands. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L113-L113","name":"Lean.Parser.instInhabitedInputContext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedInputContext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L109-L113","name":"Lean.Parser.InputContext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.InputContext","doc":"Input string and related data. Recall that the `FileMap` is a helper structure for mapping\n`String.Pos` in the input string to line/column information.  "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L103-L104","name":"Lean.Parser.SyntaxNodeKindSet.insert","docLink":"./Lean/Parser/Basic.html#Lean.Parser.SyntaxNodeKindSet.insert","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L101-L101","name":"Lean.Parser.SyntaxNodeKindSet","docLink":"./Lean/Parser/Basic.html#Lean.Parser.SyntaxNodeKindSet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L99-L99","name":"Lean.Parser.TokenTable","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenTable","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L95-L97","name":"Lean.Parser.initCacheForInput","docLink":"./Lean/Parser/Basic.html#Lean.Parser.initCacheForInput","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L92-L93","name":"Lean.Parser.ParserCache","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCache","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L87-L90","name":"Lean.Parser.TokenCacheEntry","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenCacheEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L85-L85","name":"Lean.Parser.Token","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Token","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L83-L83","name":"Lean.Parser.minPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.minPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L82-L82","name":"Lean.Parser.leadPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L81-L81","name":"Lean.Parser.argPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.argPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L80-L80","name":"Lean.Parser.maxPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.maxPrec","doc":"Maximal (and function application) precedence.\nIn the standard lean language, no parser has precedence higher than `maxPrec`.\n\nNote that nothing prevents users from using a higher precedence, but we strongly\ndiscourage them from doing it. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L72-L73","name":"Lean.Parser.getNext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.getNext","doc":"Return character after position `pos` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L68-L69","name":"Lean.Parser.mkIdent","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkIdent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Parser/Basic.lean#L65-L66","name":"Lean.Parser.mkAtom","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAtom","doc":""}]}