{"name":"Lean.Meta.Tactic.Simp.SimpTheorems","instances":[{"typeNames":["Lean.Meta.Origin"],"name":"Lean.Meta.instInhabitedOrigin","className":"Inhabited"},{"typeNames":["Lean.Meta.Origin"],"name":"Lean.Meta.instReprOrigin","className":"Repr"},{"typeNames":["Lean.Meta.Origin"],"name":"Lean.Meta.instBEqOrigin","className":"BEq"},{"typeNames":["Lean.Meta.Origin"],"name":"Lean.Meta.instHashableOrigin","className":"Hashable"},{"typeNames":["Lean.Meta.SimpTheorem"],"name":"Lean.Meta.instInhabitedSimpTheorem","className":"Inhabited"},{"typeNames":["Lean.Meta.SimpTheorem"],"name":"Lean.Meta.instToFormatSimpTheorem","className":"Std.ToFormat"},{"typeNames":["Lean.Meta.SimpTheorem"],"name":"Lean.Meta.instBEqSimpTheorem","className":"BEq"},{"typeNames":["Lean.Meta.SimpTheorems"],"name":"Lean.Meta.instInhabitedSimpTheorems","className":"Inhabited"},{"typeNames":["Lean.Meta.SimpEntry"],"name":"Lean.Meta.instInhabitedSimpEntry","className":"Inhabited"}],"imports":["Init","Lean.ScopedEnvExtension","Lean.Util.Recognizers","Lean.Meta.DiscrTree","Lean.Meta.AppBuilder","Lean.Meta.Eqns","Lean.Meta.Tactic.AuxLemma","Lean.DocString"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L454-L460","name":"Lean.Parser.Command.registerSimpAttr","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Parser.Command.registerSimpAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L451-L452","name":"Lean.Meta.SimpTheoremsArray.isDeclToUnfold","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray.isDeclToUnfold","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L448-L449","name":"Lean.Meta.SimpTheoremsArray.isErased","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray.isErased","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L445-L446","name":"Lean.Meta.SimpTheoremsArray.eraseTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray.eraseTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L438-L443","name":"Lean.Meta.SimpTheoremsArray.addTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray.addTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L436-L436","name":"Lean.Meta.SimpTheoremsArray","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L425-L434","name":"Lean.Meta.SimpTheorems.addDeclToUnfold","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.addDeclToUnfold","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L418-L423","name":"Lean.Meta.SimpTheorems.add","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.add","doc":"Auxiliary method for adding a local simp theorem to a `SimpTheorems` datastructure. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L413-L415","name":"Lean.Meta.mkSimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.mkSimpTheorems","doc":"Auxiliary method for creating simp theorems from a proof term `val`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L395-L404","name":"Lean.Meta.SimpTheorem.getValue","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorem.getValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L390-L393","name":"Lean.Meta.SimpTheorems.addConst","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.addConst","doc":"Auxiliary method for adding a global declaration to a `SimpTheorems` datastructure. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L386-L387","name":"Lean.Meta.getSimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.getSimpTheorems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L383-L384","name":"Lean.Meta.getSimpExtension?","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.getSimpExtension?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L381-L381","name":"Lean.Meta.simpExtension","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.simpExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L374-L379","name":"Lean.Meta.registerSimpAttr","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.registerSimpAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L372-L372","name":"Lean.Meta.simpExtensionMapRef","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.simpExtensionMapRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L370-L370","name":"Lean.Meta.SimpExtensionMap","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpExtensionMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L359-L368","name":"Lean.Meta.mkSimpExt","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.mkSimpExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L327-L357","name":"Lean.Meta.mkSimpAttr","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.mkSimpAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L322-L325","name":"Lean.Meta.addSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.addSimpTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L319-L320","name":"Lean.Meta.SimpExtension.getTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpExtension.getTheorems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L317-L317","name":"Lean.Meta.SimpExtension","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L315-L315","name":"Lean.Meta.instInhabitedSimpEntry","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instInhabitedSimpEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L311-L315","name":"Lean.Meta.SimpEntry","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L183-L190","name":"Lean.Meta.SimpTheorems.erase","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.erase","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L172-L181","name":"Lean.Meta.SimpTheorems.eraseCore","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.eraseCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L169-L170","name":"Lean.Meta.SimpTheorems.registerDeclToUnfoldThms","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.registerDeclToUnfoldThms","doc":"Register the equational theorems for the given definition. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L165-L166","name":"Lean.Meta.SimpTheorems.isLemma","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.isLemma","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L162-L163","name":"Lean.Meta.SimpTheorems.isDeclToUnfold","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.isDeclToUnfold","doc":"Return `true` if `declName` is tagged to be unfolded using `unfoldDefinition?` (i.e., without using equational theorems). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L158-L159","name":"Lean.Meta.SimpTheorems.addDeclToUnfoldCore","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.addDeclToUnfoldCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L155-L156","name":"Lean.Meta.addSimpTheoremEntry.updateLemmaNames","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.addSimpTheoremEntry.updateLemmaNames","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L149-L156","name":"Lean.Meta.addSimpTheoremEntry","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.addSimpTheoremEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L147-L147","name":"Lean.Meta.instInhabitedSimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instInhabitedSimpTheorems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L140-L147","name":"Lean.Meta.SimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L137-L138","name":"Lean.Meta.instBEqSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instBEqSimpTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L131-L135","name":"Lean.Meta.ppSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.ppSimpTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L125-L129","name":"Lean.Meta.ppOrigin","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.ppOrigin","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L118-L123","name":"Lean.Meta.instToFormatSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instToFormatSimpTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L112-L116","name":"Lean.Meta.isRflProof","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.isRflProof","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L107-L109","name":"Lean.Meta.isRflTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.isRflTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L85-L105","name":"Lean.Meta.isRflProofCore","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.isRflProofCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L82-L82","name":"Lean.Meta.instInhabitedSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instInhabitedSimpTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L62-L82","name":"Lean.Meta.SimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorem","doc":"The fields `levelParams` and `proof` are used to encode the proof of the simp theorem.\nIf the `proof` is a global declaration `c`, we store `Expr.const c []` at `proof` without the universe levels, and `levelParams` is set to `#[]`\nWhen using the lemma, we create fresh universe metavariables.\nMotivation: most simp theorems are global declarations, and this approach is faster and saves memory.\n\nThe field `levelParams` is not empty only when we elaborate an expression provided by the user, and it contains universe metavariables.\nThen, we use `abstractMVars` to abstract the universe metavariables and create new fresh universe parameters that are stored at the field `levelParams`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L51-L51","name":"Lean.Meta.instHashableOrigin","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instHashableOrigin","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L50-L50","name":"Lean.Meta.instBEqOrigin","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instBEqOrigin","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L44-L48","name":"Lean.Meta.Origin.key","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.Origin.key","doc":"A unique identifier corresponding to the origin. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L41-L41","name":"Lean.Meta.instReprOrigin","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instReprOrigin","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L41-L41","name":"Lean.Meta.instInhabitedOrigin","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instInhabitedOrigin","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L19-L41","name":"Lean.Meta.Origin","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.Origin","doc":"An `Origin` is an identifier for simp theorems which indicates roughly\nwhat action the user took which lead to this theorem existing in the simp set.\n"}]}