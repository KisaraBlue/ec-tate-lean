{"name":"Lean.Elab.MutualDef","instances":[{"typeNames":["Lean.Elab.DefViewElabHeader"],"name":"Lean.Elab.instInhabitedDefViewElabHeader","className":"Inhabited"}],"imports":["Init","Lean.Parser.Term","Lean.Meta.Closure","Lean.Meta.Check","Lean.Meta.Transform","Lean.PrettyPrinter.Delaborator.Options","Lean.Elab.Command","Lean.Elab.Match","Lean.Elab.DefView","Lean.Elab.Deriving.Basic","Lean.Elab.PreDefinition.Main","Lean.Elab.DeclarationRange"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L813-L819","name":"Lean.Elab.Command.elabMutualDef","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Command.elabMutualDef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L801-L808","name":"Lean.Elab.Term.elabMutualDef.processDeriving","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.processDeriving","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L768-L799","name":"Lean.Elab.Term.elabMutualDef.go","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L762-L808","name":"Lean.Elab.Term.elabMutualDef","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L747-L757","name":"Lean.Elab.Term.checkForHiddenUnivLevels.visit","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels.visit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L737-L746","name":"Lean.Elab.Term.checkForHiddenUnivLevels.visitLevel","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels.visitLevel","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L723-L760","name":"Lean.Elab.Term.checkForHiddenUnivLevels","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L671-L697","name":"Lean.Elab.Term.MutualClosure.main","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.main","doc":"- `sectionVars`:   The section variables used in the `mutual` block.\n- `mainHeaders`:   The elaborated header of the top-level definitions being defined by the mutual block.\n- `mainFVars`:     The auxiliary variables used to represent the top-level definitions being defined by the mutual block.\n- `mainVals`:      The elaborated value for the top-level definitions\n- `letRecsToLift`: The let-rec's definitions that need to be lifted\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L658-L662","name":"Lean.Elab.Term.MutualClosure.getModifiersForLetRecs","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getModifiersForLetRecs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L654-L656","name":"Lean.Elab.Term.MutualClosure.getKindForLetRecs","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getKindForLetRecs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L642-L652","name":"Lean.Elab.Term.MutualClosure.pushLetRecs","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushLetRecs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L627-L640","name":"Lean.Elab.Term.MutualClosure.pushMain","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushMain","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L620-L625","name":"Lean.Elab.Term.MutualClosure.Replacement.apply","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement.apply","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L616-L618","name":"Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L611-L613","name":"Lean.Elab.Term.MutualClosure.insertReplacementForMainFns","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForMainFns","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L609-L609","name":"Lean.Elab.Term.MutualClosure.Replacement","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement","doc":"Mapping from FVarId of mutually recursive functions being defined to \"closure\" expression. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L547-L552","name":"Lean.Elab.Term.MutualClosure.LetRecClosure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L479-L483","name":"Lean.Elab.Term.MutualClosure.ClosureState","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L459-L459","name":"Lean.Elab.Term.MutualClosure.FreeVarMap","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FreeVarMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L453-L455","name":"Lean.Elab.Term.MutualClosure.FixPoint.run","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.run","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L411-L411","name":"Lean.Elab.Term.MutualClosure.FixPoint.M","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.M","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L407-L409","name":"Lean.Elab.Term.MutualClosure.FixPoint.State","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L317-L317","name":"Lean.Elab.Term.MutualClosure.UsedFVarsMap","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap","doc":"A mapping from FVarId to Set of FVarIds. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L43-L43","name":"Lean.Elab.instInhabitedDefViewElabHeader","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.instInhabitedDefViewElabHeader","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/MutualDef.lean#L22-L43","name":"Lean.Elab.DefViewElabHeader","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader","doc":"`DefView` after elaborating the header. "}]}