{"name":"Lean.Elab.Quotation.Util","instances":[],"imports":["Init","Lean.Elab.Term"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/Quotation/Util.lean#L43-L45","name":"Lean.Elab.Term.Quotation.getAntiquotKindSpec?","docLink":"./Lean/Elab/Quotation/Util.html#Lean.Elab.Term.Quotation.getAntiquotKindSpec?","doc":"Given an antiquotation like `$e:term` (i.e. `Syntax.antiquotKind?` returns `some`),\nreturns the `\"term\"` atom if present.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/Quotation/Util.lean#L36-L37","name":"Lean.Elab.Term.Quotation.getPatternsVars","docLink":"./Lean/Elab/Quotation/Util.html#Lean.Elab.Term.Quotation.getPatternsVars","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/Quotation/Util.lean#L27-L34","name":"Lean.Elab.Term.Quotation.getPatternVars","docLink":"./Lean/Elab/Quotation/Util.html#Lean.Elab.Term.Quotation.getPatternVars","doc":"Get all pattern vars (as `Syntax.ident`s) in `stx` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/Quotation/Util.lean#L16-L24","name":"Lean.Elab.Term.Quotation.getAntiquotationIds","docLink":"./Lean/Elab/Quotation/Util.html#Lean.Elab.Term.Quotation.getAntiquotationIds","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Elab/Quotation/Util.lean#L11-L14","name":"Lean.Elab.Term.Quotation.hygiene","docLink":"./Lean/Elab/Quotation/Util.html#Lean.Elab.Term.Quotation.hygiene","doc":""}]}