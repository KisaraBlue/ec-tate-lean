{"name":"Lean.Data.Lsp.Extra","instances":[{"typeNames":["Lean.Lsp.WaitForDiagnosticsParams"],"name":"Lean.Lsp.instFromJsonWaitForDiagnosticsParams","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.WaitForDiagnosticsParams"],"name":"Lean.Lsp.instToJsonWaitForDiagnosticsParams","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.WaitForDiagnostics"],"name":"Lean.Lsp.instFromJsonWaitForDiagnostics","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.WaitForDiagnostics"],"name":"Lean.Lsp.instToJsonWaitForDiagnostics","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.LeanFileProgressKind"],"name":"Lean.Lsp.instInhabitedLeanFileProgressKind","className":"Inhabited"},{"typeNames":["Lean.Lsp.LeanFileProgressKind"],"name":"Lean.Lsp.instBEqLeanFileProgressKind","className":"BEq"},{"typeNames":["Lean.Lsp.LeanFileProgressKind"],"name":"Lean.Lsp.instFromJsonLeanFileProgressKind","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.LeanFileProgressKind"],"name":"Lean.Lsp.instToJsonLeanFileProgressKind","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.LeanFileProgressProcessingInfo"],"name":"Lean.Lsp.instFromJsonLeanFileProgressProcessingInfo","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.LeanFileProgressProcessingInfo"],"name":"Lean.Lsp.instToJsonLeanFileProgressProcessingInfo","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.LeanFileProgressParams"],"name":"Lean.Lsp.instFromJsonLeanFileProgressParams","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.LeanFileProgressParams"],"name":"Lean.Lsp.instToJsonLeanFileProgressParams","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.PlainGoalParams"],"name":"Lean.Lsp.instFromJsonPlainGoalParams","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.PlainGoalParams"],"name":"Lean.Lsp.instToJsonPlainGoalParams","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.PlainGoal"],"name":"Lean.Lsp.instFromJsonPlainGoal","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.PlainGoal"],"name":"Lean.Lsp.instToJsonPlainGoal","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.PlainTermGoalParams"],"name":"Lean.Lsp.instFromJsonPlainTermGoalParams","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.PlainTermGoalParams"],"name":"Lean.Lsp.instToJsonPlainTermGoalParams","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.PlainTermGoal"],"name":"Lean.Lsp.instFromJsonPlainTermGoal","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.PlainTermGoal"],"name":"Lean.Lsp.instToJsonPlainTermGoal","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.RpcConnectParams"],"name":"Lean.Lsp.instFromJsonRpcConnectParams","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.RpcConnectParams"],"name":"Lean.Lsp.instToJsonRpcConnectParams","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.RpcConnected"],"name":"Lean.Lsp.instFromJsonRpcConnected","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.RpcConnected"],"name":"Lean.Lsp.instToJsonRpcConnected","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.RpcCallParams"],"name":"Lean.Lsp.instFromJsonRpcCallParams","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.RpcCallParams"],"name":"Lean.Lsp.instToJsonRpcCallParams","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.RpcReleaseParams"],"name":"Lean.Lsp.instFromJsonRpcReleaseParams","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.RpcReleaseParams"],"name":"Lean.Lsp.instToJsonRpcReleaseParams","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.RpcKeepAliveParams"],"name":"Lean.Lsp.instFromJsonRpcKeepAliveParams","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.RpcKeepAliveParams"],"name":"Lean.Lsp.instToJsonRpcKeepAliveParams","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.LineRange"],"name":"Lean.Lsp.instInhabitedLineRange","className":"Inhabited"},{"typeNames":["Lean.Lsp.LineRange"],"name":"Lean.Lsp.instReprLineRange","className":"Repr"},{"typeNames":["Lean.Lsp.LineRange"],"name":"Lean.Lsp.instFromJsonLineRange","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.LineRange"],"name":"Lean.Lsp.instToJsonLineRange","className":"Lean.ToJson"}],"imports":["Init","Lean.Data.Lsp.Basic","Lean.Server.Rpc.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L150-L150","name":"Lean.Lsp.instToJsonLineRange","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonLineRange","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L150-L150","name":"Lean.Lsp.instFromJsonLineRange","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonLineRange","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L150-L150","name":"Lean.Lsp.instReprLineRange","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instReprLineRange","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L150-L150","name":"Lean.Lsp.instInhabitedLineRange","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instInhabitedLineRange","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L147-L150","name":"Lean.Lsp.LineRange","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.LineRange","doc":"Range of lines in a document, including `start` but excluding `end`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L142-L142","name":"Lean.Lsp.instToJsonRpcKeepAliveParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonRpcKeepAliveParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L142-L142","name":"Lean.Lsp.instFromJsonRpcKeepAliveParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonRpcKeepAliveParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L139-L142","name":"Lean.Lsp.RpcKeepAliveParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.RpcKeepAliveParams","doc":"`$/lean/rpc/keepAlive` client->server notification.\n\nThe client must send an RPC notification every 10s in order to keep the RPC session alive.\nThis is the simplest one. On not seeing any notifications for three 10s periods, the server\nwill drop the RPC session and its associated references. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L132-L132","name":"Lean.Lsp.instToJsonRpcReleaseParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonRpcReleaseParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L132-L132","name":"Lean.Lsp.instFromJsonRpcReleaseParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonRpcReleaseParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L128-L132","name":"Lean.Lsp.RpcReleaseParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.RpcReleaseParams","doc":"`$/lean/rpc/release` client->server notification.\n\nA notification to release remote references. Should be sent by the client when it no longer needs\n`RpcRef`s it has previously received from the server. Not doing so is safe but will leak memory. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L122-L122","name":"Lean.Lsp.instToJsonRpcCallParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonRpcCallParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L122-L122","name":"Lean.Lsp.instFromJsonRpcCallParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonRpcCallParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L117-L122","name":"Lean.Lsp.RpcCallParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.RpcCallParams","doc":"`$/lean/rpc/call` client->server request.\n\nA request to execute a procedure bound for RPC. If an incorrect session ID is present, the server\nerrors with `RpcNeedsReconnect`.\n\nExtending TDPP is weird. But in Lean, symbols exist in the context of a position within a source\nfile. So we need this to refer to code in the environment at that position. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L108-L108","name":"Lean.Lsp.instToJsonRpcConnected","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonRpcConnected","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L108-L108","name":"Lean.Lsp.instFromJsonRpcConnected","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonRpcConnected","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L106-L108","name":"Lean.Lsp.RpcConnected","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.RpcConnected","doc":"`$/lean/rpc/connect` client<-server reply.\n\nIndicates that an RPC connection had been made and a session started for it. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L101-L101","name":"Lean.Lsp.instToJsonRpcConnectParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonRpcConnectParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L101-L101","name":"Lean.Lsp.instFromJsonRpcConnectParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonRpcConnectParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L99-L101","name":"Lean.Lsp.RpcConnectParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.RpcConnectParams","doc":"`$/lean/rpc/connect` client->server request.\n\nStarts an RPC session at the given file's worker, replying with the new session ID.\nMultiple sessions may be started and operating concurrently.\n\nA session may be destroyed by the server at any time (e.g. due to a crash), in which case further\nRPC requests for that session will reply with `RpcNeedsReconnect` errors. The client should discard\nreferences held from that session and `connect` again. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L89-L89","name":"Lean.Lsp.instToJsonPlainTermGoal","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonPlainTermGoal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L89-L89","name":"Lean.Lsp.instFromJsonPlainTermGoal","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonPlainTermGoal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L86-L89","name":"Lean.Lsp.PlainTermGoal","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.PlainTermGoal","doc":"`$/lean/plainTermGoal` client<-server reply. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L83-L83","name":"Lean.Lsp.instToJsonPlainTermGoalParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonPlainTermGoalParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L83-L83","name":"Lean.Lsp.instFromJsonPlainTermGoalParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonPlainTermGoalParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L82-L83","name":"Lean.Lsp.PlainTermGoalParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.PlainTermGoalParams","doc":"`$/lean/plainTermGoal` client->server request.\n\nReturns the expected type at the specified position, pretty-printed as a string. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L77-L77","name":"Lean.Lsp.instToJsonPlainGoal","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonPlainGoal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L77-L77","name":"Lean.Lsp.instFromJsonPlainGoal","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonPlainGoal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L72-L77","name":"Lean.Lsp.PlainGoal","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.PlainGoal","doc":"`$/lean/plainGoal` client<-server reply. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L69-L69","name":"Lean.Lsp.instToJsonPlainGoalParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonPlainGoalParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L69-L69","name":"Lean.Lsp.instFromJsonPlainGoalParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonPlainGoalParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L68-L69","name":"Lean.Lsp.PlainGoalParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.PlainGoalParams","doc":"`$/lean/plainGoal` client->server request.\n\nIf there is a tactic proof at the specified position, returns the current goals.\nOtherwise returns `null`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L62-L62","name":"Lean.Lsp.instToJsonLeanFileProgressParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonLeanFileProgressParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L62-L62","name":"Lean.Lsp.instFromJsonLeanFileProgressParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonLeanFileProgressParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L59-L62","name":"Lean.Lsp.LeanFileProgressParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.LeanFileProgressParams","doc":"`$/lean/fileProgress` client<-server notification.\n\nContains the ranges of the document that are currently being processed by the server. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L54-L54","name":"Lean.Lsp.instToJsonLeanFileProgressProcessingInfo","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonLeanFileProgressProcessingInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L54-L54","name":"Lean.Lsp.instFromJsonLeanFileProgressProcessingInfo","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonLeanFileProgressProcessingInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L51-L54","name":"Lean.Lsp.LeanFileProgressProcessingInfo","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.LeanFileProgressProcessingInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L47-L49","name":"Lean.Lsp.instToJsonLeanFileProgressKind","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonLeanFileProgressKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L41-L45","name":"Lean.Lsp.instFromJsonLeanFileProgressKind","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonLeanFileProgressKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L39-L39","name":"Lean.Lsp.instBEqLeanFileProgressKind","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instBEqLeanFileProgressKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L39-L39","name":"Lean.Lsp.instInhabitedLeanFileProgressKind","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instInhabitedLeanFileProgressKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L37-L39","name":"Lean.Lsp.LeanFileProgressKind","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.LeanFileProgressKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L34-L35","name":"Lean.Lsp.instToJsonWaitForDiagnostics","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonWaitForDiagnostics","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L31-L32","name":"Lean.Lsp.instFromJsonWaitForDiagnostics","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonWaitForDiagnostics","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L29-L29","name":"Lean.Lsp.WaitForDiagnostics","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.WaitForDiagnostics","doc":"`textDocument/waitForDiagnostics` client<-server reply. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L26-L26","name":"Lean.Lsp.instToJsonWaitForDiagnosticsParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonWaitForDiagnosticsParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L26-L26","name":"Lean.Lsp.instFromJsonWaitForDiagnosticsParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonWaitForDiagnosticsParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Data/Lsp/Extra.lean#L23-L26","name":"Lean.Lsp.WaitForDiagnosticsParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.WaitForDiagnosticsParams","doc":"`textDocument/waitForDiagnostics` client->server request.\n\nYields a response when all the diagnostics for a version of the document greater or equal to the\nspecified one have been emitted. If the request specifies a version above the most recently\nprocessed one, the server will delay the response until it does receive the specified version.\nExists for synchronization purposes, e.g. during testing or when external tools might want to use\nour LSP server. "}]}