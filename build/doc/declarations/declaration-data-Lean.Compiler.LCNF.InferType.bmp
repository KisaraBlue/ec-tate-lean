{"name":"Lean.Compiler.LCNF.InferType","instances":[],"imports":["Init","Lean.Compiler.LCNF.CompilerM","Lean.Compiler.LCNF.Types","Lean.Compiler.LCNF.PhaseExt","Lean.Compiler.LCNF.OtherDecl"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L285-L305","name":"Lean.Compiler.LCNF.eqvTypes","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.eqvTypes","doc":"Return `true` if the given LCNF are equivalent.\n`List Nat` and `(fun x => List x) Nat` are both equivalent.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L268-L279","name":"Lean.Compiler.LCNF.isErasedCompatible.go","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.isErasedCompatible.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L265-L279","name":"Lean.Compiler.LCNF.isErasedCompatible","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.isErasedCompatible","doc":"Return `true` if `type` should be erased. See item 1 in the note above where `x ◾ ◾` is\na proposition and should be erased when the universe level parameter is set to 0.\n\nRemark: `predVars` is a bitmask that indicates whether de-bruijn variables are predicates or not.\nThat is, `#i` is a predicate if `predVars[predVars.size - i - 1] = true`\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L250-L256","name":"Lean.Compiler.LCNF.mkCasesResultType","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.mkCasesResultType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L246-L248","name":"Lean.Compiler.LCNF.mkAuxJpDecl'","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.mkAuxJpDecl'","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L243-L244","name":"Lean.Compiler.LCNF.mkAuxJpDecl","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.mkAuxJpDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L238-L241","name":"Lean.Compiler.LCNF.mkAuxFunDecl","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.mkAuxFunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L235-L236","name":"Lean.Compiler.LCNF.mkForallParams","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.mkForallParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L232-L233","name":"Lean.Compiler.LCNF.mkAuxLetDecl","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.mkAuxLetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L229-L230","name":"Lean.Compiler.LCNF.AltCore.inferType","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.AltCore.inferType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L224-L227","name":"Lean.Compiler.LCNF.Code.inferParamType","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.Code.inferParamType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L216-L222","name":"Lean.Compiler.LCNF.Code.inferType","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.Code.inferType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L211-L214","name":"Lean.Compiler.LCNF.getLevel","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.getLevel","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L208-L209","name":"Lean.Compiler.LCNF.inferType","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.inferType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L195-L203","name":"Lean.Compiler.LCNF.InferType.inferLambdaType.go","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.inferLambdaType.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L192-L203","name":"Lean.Compiler.LCNF.InferType.inferLambdaType","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.inferLambdaType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L177-L190","name":"Lean.Compiler.LCNF.InferType.inferForallType.go","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.inferForallType.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L174-L190","name":"Lean.Compiler.LCNF.InferType.inferForallType","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.inferForallType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L169-L172","name":"Lean.Compiler.LCNF.InferType.getLevel?","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.getLevel?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L137-L167","name":"Lean.Compiler.LCNF.InferType.inferProjType","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.inferProjType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L134-L135","name":"Lean.Compiler.LCNF.InferType.inferAppType","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.inferAppType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L120-L132","name":"Lean.Compiler.LCNF.InferType.inferAppTypeCore","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.inferAppTypeCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L105-L118","name":"Lean.Compiler.LCNF.InferType.inferType","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.inferType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L94-L101","name":"Lean.Compiler.LCNF.InferType.inferConstType","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.inferConstType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L89-L92","name":"Lean.Compiler.LCNF.InferType.withLocalDecl","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.withLocalDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L85-L87","name":"Lean.Compiler.LCNF.InferType.mkForallParams","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.mkForallParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L76-L83","name":"Lean.Compiler.LCNF.InferType.mkForallFVars","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.mkForallFVars","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L71-L74","name":"Lean.Compiler.LCNF.InferType.getType","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.getType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L66-L69","name":"Lean.Compiler.LCNF.InferType.getBinderName","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.getBinderName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/InferType.lean#L64-L64","name":"Lean.Compiler.LCNF.InferType.InferTypeM","docLink":"./Lean/Compiler/LCNF/InferType.html#Lean.Compiler.LCNF.InferType.InferTypeM","doc":"We use a regular local context to store temporary local declarations\ncreated during type inference.\n"}]}