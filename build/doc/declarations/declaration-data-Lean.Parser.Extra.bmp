{"name":"Lean.Parser.Extra","instances":[],"imports":["Init","Lean.Parser.Extension","Lean.PrettyPrinter.Parenthesizer","Lean.PrettyPrinter.Formatter"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L174-L174","name":"Lean.Parser.«termRegister_parser_alias(Kind:=_)____»","docLink":"./Lean/Parser/Extra.html#Lean.Parser.«termRegister_parser_alias(Kind:=_)____»","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L159-L163","name":"Lean.ppHardLineUnlessUngrouped.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppHardLineUnlessUngrouped.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L154-L158","name":"Lean.ppDedentIfGrouped.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppDedentIfGrouped.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L152-L153","name":"Lean.ppAllowUngrouped.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppAllowUngrouped.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L148-L150","name":"Lean.ppDedent.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppDedent.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L147-L147","name":"Lean.ppIndent.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppIndent.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L146-L146","name":"Lean.ppRealGroup.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppRealGroup.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L145-L145","name":"Lean.ppRealFill.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppRealFill.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L144-L144","name":"Lean.ppLine.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppLine.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L143-L143","name":"Lean.ppSpace.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppSpace.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L142-L142","name":"Lean.ppHardSpace.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppHardSpace.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L135-L135","name":"Lean.Parser.ppHardLineUnlessUngrouped","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppHardLineUnlessUngrouped","doc":"No-op parser combinator that prints a line break.\nThe line break is soft if the combinator is followed\nby an ungrouped parser (see ppAllowUngrouped), otherwise hard. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L129-L129","name":"Lean.Parser.ppDedentIfGrouped","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppDedentIfGrouped","doc":"No-op parser combinator that advises the pretty printer to dedent the given syntax,\nif it was grouped by the category parser.\nDedenting can in particular be used to counteract automatic indentation. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L123-L123","name":"Lean.Parser.ppAllowUngrouped","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppAllowUngrouped","doc":"No-op parser combinator that allows the pretty printer to omit the group and\nindent operation in the enclosing category parser.\n```\nsyntax ppAllowUngrouped \"by \" tacticSeq : term\n-- allows a `by` after `:=` without linebreak in between:\ntheorem foo : True := by\n  trivial\n```\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L111-L111","name":"Lean.Parser.ppDedent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppDedent","doc":"No-op parser combinator that advises the pretty printer to dedent the given syntax.\nDedenting can in particular be used to counteract automatic indentation. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L107-L107","name":"Lean.Parser.ppGroup","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppGroup","doc":"No-op parser combinator that advises the pretty printer to group and indent the given syntax.\nBy default, only syntax categories are grouped. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L103-L103","name":"Lean.Parser.ppIndent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppIndent","doc":"No-op parser combinator that advises the pretty printer to indent the given syntax without grouping it. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L101-L101","name":"Lean.Parser.ppRealGroup","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppRealGroup","doc":"No-op parser combinator that advises the pretty printer to emit a `Format.group` node. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L99-L99","name":"Lean.Parser.ppRealFill","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppRealFill","doc":"No-op parser combinator that advises the pretty printer to emit a `Format.fill` node. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L97-L97","name":"Lean.Parser.ppLine","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppLine","doc":"No-op parser that advises the pretty printer to emit a hard line break. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L95-L95","name":"Lean.Parser.ppSpace","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppSpace","doc":"No-op parser that advises the pretty printer to emit a space/soft line break. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L93-L93","name":"Lean.Parser.ppHardSpace","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppHardSpace","doc":"No-op parser that advises the pretty printer to emit a non-breaking space. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L89-L90","name":"Lean.Parser.notSymbol","docLink":"./Lean/Parser/Extra.html#Lean.Parser.notSymbol","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L85-L85","name":"Lean.Parser.sepBy1Indent.formatter","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepBy1Indent.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L70-L83","name":"Lean.Parser.sepByIndent.formatter","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepByIndent.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L64-L66","name":"Lean.Parser.sepBy1Indent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepBy1Indent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L60-L62","name":"Lean.Parser.sepByIndent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepByIndent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L57-L58","name":"Lean.Parser.manyIndent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.manyIndent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L54-L55","name":"Lean.Parser.many1Indent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.many1Indent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L51-L52","name":"Lean.Parser.group","docLink":"./Lean/Parser/Extra.html#Lean.Parser.group","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L48-L49","name":"Lean.Parser.nameLit","docLink":"./Lean/Parser/Extra.html#Lean.Parser.nameLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L45-L46","name":"Lean.Parser.charLit","docLink":"./Lean/Parser/Extra.html#Lean.Parser.charLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L42-L43","name":"Lean.Parser.strLit","docLink":"./Lean/Parser/Extra.html#Lean.Parser.strLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L39-L40","name":"Lean.Parser.scientificLit","docLink":"./Lean/Parser/Extra.html#Lean.Parser.scientificLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L36-L37","name":"Lean.Parser.numLit","docLink":"./Lean/Parser/Extra.html#Lean.Parser.numLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L33-L34","name":"Lean.Parser.rawIdent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.rawIdent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L29-L30","name":"Lean.Parser.ident","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ident","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L26-L27","name":"Lean.Parser.many1","docLink":"./Lean/Parser/Extra.html#Lean.Parser.many1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L23-L24","name":"Lean.Parser.many","docLink":"./Lean/Parser/Extra.html#Lean.Parser.many","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Parser/Extra.lean#L20-L21","name":"Lean.Parser.optional","docLink":"./Lean/Parser/Extra.html#Lean.Parser.optional","doc":""}]}