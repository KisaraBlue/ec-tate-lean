{"name":"Lean.Compiler.LCNF.Closure","instances":[],"imports":["Init","Lean.Util.ForEachExpr","Lean.Compiler.LCNF.CompilerM"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/Closure.lean#L137-L139","name":"Lean.Compiler.LCNF.Closure.run","docLink":"./Lean/Compiler/LCNF/Closure.html#Lean.Compiler.LCNF.Closure.run","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/Closure.lean#L130-L134","name":"Lean.Compiler.LCNF.Closure.collectExpr","docLink":"./Lean/Compiler/LCNF/Closure.html#Lean.Compiler.LCNF.Closure.collectExpr","doc":"Collect dependencies of the given expression. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/Closure.lean#L105-L127","name":"Lean.Compiler.LCNF.Closure.collectFVar","docLink":"./Lean/Compiler/LCNF/Closure.html#Lean.Compiler.LCNF.Closure.collectFVar","doc":"Process the given free variable.\nIf it has not already been visited and is in scope, we collect its dependencies.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/Closure.lean#L96-L99","name":"Lean.Compiler.LCNF.Closure.collectFunDecl","docLink":"./Lean/Compiler/LCNF/Closure.html#Lean.Compiler.LCNF.Closure.collectFunDecl","doc":"Collect dependencies of a local function declaration. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/Closure.lean#L80-L93","name":"Lean.Compiler.LCNF.Closure.collectCode","docLink":"./Lean/Compiler/LCNF/Closure.html#Lean.Compiler.LCNF.Closure.collectCode","doc":"Collect dependencies in the given code. We need this function to be able\nto collect dependencies in a local function declaration.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/Closure.lean#L73-L74","name":"Lean.Compiler.LCNF.Closure.collectParams","docLink":"./Lean/Compiler/LCNF/Closure.html#Lean.Compiler.LCNF.Closure.collectParams","doc":"Collect dependencies in parameters. We need this because parameters may\ncontain other type parameters.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/Closure.lean#L65-L66","name":"Lean.Compiler.LCNF.Closure.markVisited","docLink":"./Lean/Compiler/LCNF/Closure.html#Lean.Compiler.LCNF.Closure.markVisited","doc":"Mark a free variable as already visited.\nWe perform a topological sort over the dependencies.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/Closure.lean#L59-L59","name":"Lean.Compiler.LCNF.Closure.ClosureM","docLink":"./Lean/Compiler/LCNF/Closure.html#Lean.Compiler.LCNF.Closure.ClosureM","doc":"Monad for implementing the dependency collector.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/Closure.lean#L35-L54","name":"Lean.Compiler.LCNF.Closure.State","docLink":"./Lean/Compiler/LCNF/Closure.html#Lean.Compiler.LCNF.Closure.State","doc":"State for the `ClosureM` monad.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/Closure.lean#L20-L30","name":"Lean.Compiler.LCNF.Closure.Context","docLink":"./Lean/Compiler/LCNF/Closure.html#Lean.Compiler.LCNF.Closure.Context","doc":""}]}