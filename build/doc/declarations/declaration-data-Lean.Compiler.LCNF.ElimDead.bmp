{"name":"Lean.Compiler.LCNF.ElimDead","instances":[],"imports":["Init","Lean.Compiler.LCNF.CompilerM"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/ElimDead.lean#L79-L80","name":"Lean.Compiler.LCNF.Decl.elimDead","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.Decl.elimDead","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/ElimDead.lean#L76-L77","name":"Lean.Compiler.LCNF.Code.elimDead","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.Code.elimDead","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/ElimDead.lean#L45-L70","name":"Lean.Compiler.LCNF.ElimDead.elimDead","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.elimDead","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/ElimDead.lean#L41-L43","name":"Lean.Compiler.LCNF.ElimDead.visitFunDecl","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.visitFunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/ElimDead.lean#L32-L32","name":"Lean.Compiler.LCNF.ElimDead.M","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.M","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/ElimDead.lean#L19-L28","name":"Lean.Compiler.LCNF.collectLocalDecls.go","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDecls.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/ElimDead.lean#L16-L28","name":"Lean.Compiler.LCNF.collectLocalDecls","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDecls","doc":"Collect set of (let) free variables in a LCNF value.\nThis code exploits the LCNF property that local declarations do not occur in types.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Compiler/LCNF/ElimDead.lean#L10-L10","name":"Lean.Compiler.LCNF.UsedLocalDecls","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls","doc":""}]}