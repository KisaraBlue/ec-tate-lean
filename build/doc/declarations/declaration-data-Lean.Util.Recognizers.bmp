{"name":"Lean.Util.Recognizers","instances":[],"imports":["Init","Lean.Environment"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L135-L152","name":"Lean.Expr.constructorApp?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.constructorApp?","doc":"If `e` is a constructor application, return a pair containing the corresponding `ConstructorVal` and the constructor\napplication arguments.\nThis function treats numerals as constructors. For example, if `e` is the numeral `2`, the result pair\nis `ConstructorVal` for `Nat.succ`, and the array `#[1]`. The parameter `useRaw` controls how the resulting\nnumeral is represented. If `useRaw := false`, then `mkNatLit` is used, otherwise `mkRawNatLit`.\nRecall that `mkNatLit` uses the `OfNat.ofNat` application which is the canonical way of representing numerals\nin the elaborator and tactic framework. We `useRaw := false` in the compiler (aka code generator).\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L123-L124","name":"Lean.Expr.isConstructorApp","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.isConstructorApp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L113-L121","name":"Lean.Expr.isConstructorApp?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.isConstructorApp?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L105-L106","name":"Lean.Expr.prod?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.prod?","doc":"Recognize `α × β` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L98-L102","name":"Lean.Expr.arrayLit?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.arrayLit?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L89-L95","name":"Lean.Expr.listLit?.loop","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.listLit?.loop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L88-L96","name":"Lean.Expr.listLit?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.listLit?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L85-L86","name":"Lean.Expr.isDIte","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.isDIte","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L82-L83","name":"Lean.Expr.isIte","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.isIte","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L79-L80","name":"Lean.Expr.isHEq","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.isHEq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L76-L77","name":"Lean.Expr.isEq","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.isEq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L72-L74","name":"Lean.Expr.arrow?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.arrow?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L69-L70","name":"Lean.Expr.natAdd?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.natAdd?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L66-L67","name":"Lean.Expr.heq?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.heq?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L63-L64","name":"Lean.Expr.and?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.and?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L58-L61","name":"Lean.Expr.notNot?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.notNot?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L55-L56","name":"Lean.Expr.not?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.not?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L49-L53","name":"Lean.Expr.eqOrIff?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.eqOrIff?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L46-L47","name":"Lean.Expr.iff?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.iff?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L43-L44","name":"Lean.Expr.ne?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.ne?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L40-L41","name":"Lean.Expr.eq?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.eq?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L34-L38","name":"Lean.Expr.app4?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.app4?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L28-L32","name":"Lean.Expr.app3?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.app3?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L22-L26","name":"Lean.Expr.app2?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.app2?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L16-L20","name":"Lean.Expr.app1?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.app1?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/23ba495205f8133628d85dde572aad0c1089c094/src/Lean/Util/Recognizers.lean#L11-L14","name":"Lean.Expr.const?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.const?","doc":""}]}