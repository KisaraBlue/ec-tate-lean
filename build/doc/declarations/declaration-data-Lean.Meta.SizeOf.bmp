{"name":"Lean.Meta.SizeOf","instances":[],"imports":["Init","Lean.Meta.AppBuilder","Lean.Meta.Instances"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L473-L505","name":"Lean.Meta.mkSizeOfInstances","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.mkSizeOfInstances","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L468-L471","name":"Lean.Meta.genSizeOfSpec","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.genSizeOfSpec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L463-L466","name":"Lean.Meta.genSizeOf","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.genSizeOf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L408-L413","name":"Lean.Meta.SizeOfSpecNested.main.step","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.main.step","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L395-L406","name":"Lean.Meta.SizeOfSpecNested.main.loop","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.main.loop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L386-L413","name":"Lean.Meta.SizeOfSpecNested.main","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.main","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L214-L215","name":"Lean.Meta.SizeOfSpecNested.throwFailed","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.throwFailed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L211-L212","name":"Lean.Meta.SizeOfSpecNested.throwUnexpected","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.throwUnexpected","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L209-L209","name":"Lean.Meta.SizeOfSpecNested.M","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.M","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L201-L207","name":"Lean.Meta.SizeOfSpecNested.Context","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.Context","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L185-L196","name":"Lean.Meta.mkSizeOfSpecLemmaInstance","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.mkSizeOfSpecLemmaInstance","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L182-L183","name":"Lean.Meta.mkSizeOfSpecLemmaName","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.mkSizeOfSpecLemmaName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L158-L180","name":"Lean.Meta.mkSizeOfFns","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.mkSizeOfFns","doc":"Create `sizeOf` functions for all inductive datatypes in the mutual inductive declaration containing `typeName`\nThe resulting array contains the generated functions names. The `NameMap` maps recursor names into the generated function names.\nThere is a function for each element of the mutual inductive declaration, and for auxiliary recursors for nested inductive types.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/SizeOf.lean#L118-L151","name":"Lean.Meta.mkSizeOfFn","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.mkSizeOfFn","doc":"Create a \"sizeOf\" function with name `declName` using the recursor `recName`.\n"}]}