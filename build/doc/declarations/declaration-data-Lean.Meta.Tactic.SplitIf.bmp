{"name":"Lean.Meta.Tactic.SplitIf","instances":[],"imports":["Init","Lean.LazyInitExtension","Lean.Meta.Tactic.Cases","Lean.Meta.Tactic.Simp.Main"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/SplitIf.lean#L108-L118","name":"Lean.Meta.splitIfLocalDecl?","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.splitIfLocalDecl?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/SplitIf.lean#L97-L106","name":"Lean.Meta.splitIfTarget?","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.splitIfTarget?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/SplitIf.lean#L90-L95","name":"Lean.Meta.simpIfLocalDecl","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.simpIfLocalDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/SplitIf.lean#L83-L88","name":"Lean.Meta.simpIfTarget","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.simpIfTarget","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/SplitIf.lean#L68-L77","name":"Lean.Meta.SplitIf.splitIfAt?","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.SplitIf.splitIfAt?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/SplitIf.lean#L60-L66","name":"Lean.Meta.SplitIf.findIfToSplit?","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.SplitIf.findIfToSplit?","doc":"Return the condition of an `if` expression to case split. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/SplitIf.lean#L36-L57","name":"Lean.Meta.SplitIf.discharge?","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.SplitIf.discharge?","doc":"Default `discharge?` function for `simpIf` methods.\nIt only uses hypotheses from the local context. It is effective\nafter a case-split. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/SplitIf.lean#L29-L30","name":"Lean.Meta.SplitIf.getSimpContext","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.SplitIf.getSimpContext","doc":"Default `Simp.Context` for `simpIf` methods. It contains all congruence theorems, but\njust the rewriting rules for reducing `if` expressions. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/9b406132070ba483ba6b7c698b8d76b59a67a16a/src/Lean/Meta/Tactic/SplitIf.lean#L13-L24","name":"Lean.Meta.SplitIf.ext","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.SplitIf.ext","doc":""}]}